<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>年轻人不要老熬夜</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-11-07T05:12:04.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wangzhuning</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>英文词串 - 英语流利说</title>
    <link href="http://yoursite.com/2017/11/06/English-word-phrase/"/>
    <id>http://yoursite.com/2017/11/06/English-word-phrase/</id>
    <published>2017-11-06T15:19:08.000Z</published>
    <updated>2017-11-07T05:12:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="英语六级口语考试"><a href="#英语六级口语考试" class="headerlink" title="英语六级口语考试"></a>英语六级口语考试</h2><h3 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h3><ol><li>语音一定要准（第一印象很重要）</li><li>语速不要过快或过慢（20秒，40-50词为最佳）</li><li>适当使用连续以增加语言的流畅度，有快有慢</li><li>不要面面俱到，找一两个方向，展开一两句即可</li><li>六级考生还要根据自己的自我介绍准备可能考官追问的问题</li><li>名字问题可以不说</li></ol><p>自我介绍部分思考方向：</p><ol><li>年龄，专业</li><li>大学介绍 i am from … university,she is a famous beatiful school name love in here.</li><li>性格特点</li><li>家庭背景</li><li>业余爱好</li><li>家乡景点</li></ol><p>百度搜 地名+英文介绍可以参考</p><p>自我介绍注意停顿和连读就更好一些，每一个发言一定要准确。</p><p>先写100词的自我介绍，再按照连读规则，把施爆的地方划掉，连读音变加上，语速增加、减缓画出来，读音注意的地方画上，背下来，录下来，听哪里不好再改</p><p>老师问问题，基于你自己所说的东西问，回答的时候，挑自己会说的回答，不一定是实话。</p><p>图片</p><blockquote><p>so, what do you say? </p></blockquote><p>巴拉巴拉说了一堆后，询问对方的意见。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;英语六级口语考试&quot;&gt;&lt;a href=&quot;#英语六级口语考试&quot; class=&quot;headerlink&quot; title=&quot;英语六级口语考试&quot;&gt;&lt;/a&gt;英语六级口语考试&lt;/h2&gt;&lt;h3 id=&quot;自我介绍&quot;&gt;&lt;a href=&quot;#自我介绍&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="英语" scheme="http://yoursite.com/categories/%E8%8B%B1%E8%AF%AD/"/>
    
    
  </entry>
  
  <entry>
    <title>带领新手快速开发 Android App</title>
    <link href="http://yoursite.com/2017/11/02/imooc-Quick-develop-Android-App/"/>
    <id>http://yoursite.com/2017/11/02/imooc-Quick-develop-Android-App/</id>
    <published>2017-11-02T12:55:12.000Z</published>
    <updated>2017-11-02T13:35:13.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>借助流行的第三方 SDK 及框架，开发“生活小助手 App ”。</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/EIjPeg" alt=""></p><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><h3 id="登录注册"><a href="#登录注册" class="headerlink" title="登录注册"></a>登录注册</h3><h3 id="忘记密码"><a href="#忘记密码" class="headerlink" title="忘记密码"></a>忘记密码</h3><h2 id="语音机器人聊天"><a href="#语音机器人聊天" class="headerlink" title="语音机器人聊天"></a>语音机器人聊天</h2><h2 id="微信精选文章"><a href="#微信精选文章" class="headerlink" title="微信精选文章"></a>微信精选文章</h2><h2 id="物流及电话号码归属地查询"><a href="#物流及电话号码归属地查询" class="headerlink" title="物流及电话号码归属地查询"></a>物流及电话号码归属地查询</h2><h2 id="美女相册"><a href="#美女相册" class="headerlink" title="美女相册"></a>美女相册</h2><h2 id="个性化二维码扫描与生成"><a href="#个性化二维码扫描与生成" class="headerlink" title="个性化二维码扫描与生成"></a>个性化二维码扫描与生成</h2><h2 id="定位与查看地图"><a href="#定位与查看地图" class="headerlink" title="定位与查看地图"></a>定位与查看地图</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;借助流行的第三方 SDK 及框架，开发“生活小助手 App ”。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-std.dprcdn.net/files/acc_587316/EIjPeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 i
      
    
    </summary>
    
      <category term="慕课网" scheme="http://yoursite.com/categories/%E6%85%95%E8%AF%BE%E7%BD%91/"/>
    
      <category term="带领新手快速开发 Android App" scheme="http://yoursite.com/categories/%E6%85%95%E8%AF%BE%E7%BD%91/%E5%B8%A6%E9%A2%86%E6%96%B0%E6%89%8B%E5%BF%AB%E9%80%9F%E5%BC%80%E5%8F%91-Android-App/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>编程小白的第一本 Python 入门书</title>
    <link href="http://yoursite.com/2017/11/02/First-Python/"/>
    <id>http://yoursite.com/2017/11/02/First-Python/</id>
    <published>2017-11-02T03:16:00.000Z</published>
    <updated>2017-11-02T03:21:11.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="Python 入门" scheme="http://yoursite.com/categories/Python/Python-%E5%85%A5%E9%97%A8/"/>
    
    
      <category term="Python 入门" scheme="http://yoursite.com/tags/Python-%E5%85%A5%E9%97%A8/"/>
    
      <category term="编程小白的第一本 Python 入门书" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A8%8B%E5%B0%8F%E7%99%BD%E7%9A%84%E7%AC%AC%E4%B8%80%E6%9C%AC-Python-%E5%85%A5%E9%97%A8%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>Head First Java</title>
    <link href="http://yoursite.com/2017/11/02/Head-First-Java/"/>
    <id>http://yoursite.com/2017/11/02/Head-First-Java/</id>
    <published>2017-11-02T03:15:18.000Z</published>
    <updated>2017-11-07T12:47:17.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="Java-的垃圾回收"><a href="#Java-的垃圾回收" class="headerlink" title="Java  的垃圾回收"></a>Java  的垃圾回收</h2><p>p40</p><h2 id="对象的创建内存示意图"><a href="#对象的创建内存示意图" class="headerlink" title="对象的创建内存示意图"></a>对象的创建内存示意图</h2><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/pdfDga" alt=""></p><p>对象的引用变量有多大？</p><p>除非你和 JVM 开发团队有交情，不然不知道，在同一个 JVM 中，引用变量的大小是一样的。若你是要讨论内存分配的问题，你要关心的应该是需要建立多少个对象和引用，以及对象的实际大小。</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/8gy7r7" alt=""></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/8TbHd" alt=""></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/GDRPWt" alt=""></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/wIb8PC" alt=""></p><h2 id="Head-First-Java-基础知识附录"><a href="#Head-First-Java-基础知识附录" class="headerlink" title="Head First Java 基础知识附录"></a>Head First Java 基础知识附录</h2><h3 id="取得命令行用户输入字符串的方法"><a href="#取得命令行用户输入字符串的方法" class="headerlink" title="取得命令行用户输入字符串的方法"></a>取得命令行用户输入字符串的方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.BufferedReader;</div><div class="line"><span class="keyword">import</span> java.io.InputStreamReader;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">Helper helper = <span class="keyword">new</span> Helper();</div><div class="line">System.out.println(helper.getUserInput(<span class="string">"Please enter a number: "</span>));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUserInput</span><span class="params">(String prompt)</span> </span>&#123;</div><div class="line">String inputLine = <span class="keyword">null</span>;</div><div class="line">System.out.println(prompt + <span class="string">" "</span>);</div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">BufferedReader is = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</div><div class="line">inputLine = is.readLine();</div><div class="line"><span class="keyword">if</span> (inputLine.length() == <span class="number">0</span>) &#123;</div><div class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">&#125;</div><div class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line"><span class="comment">// <span class="doctag">TODO:</span> handle exception</span></div><div class="line">e.printStackTrace();</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> inputLine;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>其中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (inputLine.length() == <span class="number">0</span>) &#123;</div><div class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这是做”用户什么都没输入的处理”，不加这句，什么也不会输出</p><p>另外</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">String string = <span class="string">"dsfs"</span>;</div><div class="line">System.out.println(string.length());</div></pre></td></tr></table></figure><p>String 类型的变量也有 length() 方法，不止数组有。</p><p>Returns:</p><p>the length of the sequence of characters represented by this object.</p><p>如果 string 是 null ，则string.length() 会报空指向异常。</p><h3 id="foreach-与-for"><a href="#foreach-与-for" class="headerlink" title="foreach 与 for"></a>foreach 与 for</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> cell : locationCells ) &#123;···&#125;</div></pre></td></tr></table></figure><p>编译器会这么做：</p><ol><li>创建名为 cell 的 int 变量</li><li>将 locationCells 的第一个元素值赋给 cell</li><li>执行循环内容</li><li>赋值给下一个元素 cell</li><li>重复执行至所有的元素被运行完毕为止</li></ol><p>locationCells 的集合必须是数组或其他集合的引用。而且 int 这个位置的类型要与 locationCells 兼容。</p><blockquote><p>注意：可以看出，在 foreach 的执行过程中，采用了数组数据赋值，所以，cell 值的改变并不会影响 原来数组里那个位置的元素值。如果需要改变原来的数组，如排序，就要用之前的 for 循环。</p></blockquote><p>原始的 for 循环：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i&lt;<span class="number">0</span> ; i++ ) &#123;···&#125;</div><div class="line">        <span class="number">1</span>        <span class="number">2</span>     <span class="number">3</span>      <span class="number">4</span></div></pre></td></tr></table></figure><p>运行顺序：</p><p>1 -&gt; 2 ：1. true  -&gt; 4  -&gt; 3  -&gt; 2  : 1. true  -&gt; 4  -&gt; 3  -&gt; 2  :1. true  -&gt; 4  -&gt; 3  -&gt; 2  :</p><p>​               2.false  -&gt; end                 2.false  -&gt; end                2.false  -&gt; end</p><p>for 与 while 比较：</p><p>不知道执行次数用 while，知道执行次数用 for更清晰。</p><h3 id="String-转-int"><a href="#String-转-int" class="headerlink" title="String 转 int"></a>String 转 int</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> num = Integer.parseInt(<span class="string">"3"</span>);</div></pre></td></tr></table></figure><p>Integer 的 parseInt() 方法，能将 String 解析。</p><p>这个方法仅对代表数字的 String 起作用，除此之外，程序就会崩溃，抛出异常。</p><h3 id="Java-传参数是值拷贝"><a href="#Java-传参数是值拷贝" class="headerlink" title="Java 传参数是值拷贝"></a>Java 传参数是值拷贝</h3><p>参数的值是由实参拷贝而来的，参数的改变不会影响到原先的值，但要是传递的是引用变量，那么引用变量的远程控制（字节组合代表取得远程控制对象的方法）也会拷贝过来，那么参数的改变就会影响原来的值。</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/YTC5LE" alt=""></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/H8Ym1i" alt=""></p><h3 id="变量的比较"><a href="#变量的比较" class="headerlink" title="变量的比较"></a>变量的比较</h3><ol><li>== ：用来比较两个变量的字节组合是否相等，对于 primitive 主数据类型来说，字节组合就是实际的变量值，对于引用来说，字节组合是取得对象的方法（指针），== 就是判断两个引用是否指向同一个对象。</li><li>equals（）：用来判断两个对象是否在意义上相等。即对象的相等性。</li></ol><h3 id="实例变量-VS-局部变量"><a href="#实例变量-VS-局部变量" class="headerlink" title="实例变量 VS 局部变量"></a>实例变量 VS 局部变量</h3><p>实例变量声明在类内，未初始化时，有默认值。integer 和 char 类型默认为 0 ，boolean 默认为 false，对象引用默认为 null。null 表示没有操作对象的远程控制，他是个引用而不是对象。</p><p>局部变量声明在方法内，未初始化时，没有默认值。方法的参数也是局部变量。如果局部变量未初始化就使用，编译器会报错。</p><h3 id="random-方法产生随机数"><a href="#random-方法产生随机数" class="headerlink" title="random() 方法产生随机数"></a>random() 方法产生随机数</h3><p>产生 [n,m] 之间的随机数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> x = (<span class="keyword">int</span>)( Math.random() * (m-n+<span class="number">1</span>) + n );</div></pre></td></tr></table></figure><p>Math.random() 方法返回介于 0 与 1 之间的 double 值，然后将此值乘以数组元素个数，再取整数值。</p><p>random() Returns:</p><p>a pseudorandom <code>double</code> greater than or equal to <code>0.0</code> and less than <code>1.0</code>.</p><p>大于等于 0 ，小于 1.</p><h3 id="写伪代码参考"><a href="#写伪代码参考" class="headerlink" title="写伪代码参考"></a>写伪代码参考</h3><p>Chapter 5  Page 100</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/mz9c7e" alt=""></p><h3 id="类、方法、变量的命名规则"><a href="#类、方法、变量的命名规则" class="headerlink" title="类、方法、变量的命名规则"></a>类、方法、变量的命名规则</h3><ol><li>必须以字母，下划线，或 $ 开头</li><li>除第一个字符外，后面可以用数字</li><li>避开 Java 的关键字</li></ol><h3 id="变量的两种口味"><a href="#变量的两种口味" class="headerlink" title="变量的两种口味"></a>变量的两种口味</h3><ol><li>香辣的对象引用：保存的是对象的引用，以字节来表示取得对象的方法（遥控器）。</li><li>清凉的 primitive 主数据类型：保存的是变量本身，以字节代表实际的变量值，有 boolean、char、byte、short、int、long、float、double 8种。</li></ol><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/zJv58u" alt=""></p><p>注意，数组不论被声明来承载的是 primitive 主数据类型，或对象引用，数组永远是对象。</p><h3 id="Java-是个强类型语言"><a href="#Java-是个强类型语言" class="headerlink" title="Java 是个强类型语言"></a>Java 是个强类型语言</h3><p>类型不许乱用，可以被隐含的放大（小值放大容器），或明确的缩小（强制类型转换）</p><h3 id="Java-API"><a href="#Java-API" class="headerlink" title="Java API"></a>Java API</h3><p>Java 中内置了数百个类，被称为 API，其实他就是个函数库，你可以把他当做自己写的来用。ArrayList 类就是 Java 函数库里的一个。</p><p>使用函数库时，要在使用到该类时写出完整的类名，或是在源文件开头 import 进它的包名，除非是来源于 java.lang 这个包中，java.lang 是个预先被引用的包，是个经常会用到的基础包。</p><p>类用包来组织，但 import 绝不是 C 里的 include，import 只是会帮你省下每个类前面的包名称，程序并不会因为 import 而变大或变慢。</p><p>以 javax 开头的包以前曾经是扩展，后来才取得了标准的名份。</p><h3 id="ArrayList-类"><a href="#ArrayList-类" class="headerlink" title="ArrayList 类"></a>ArrayList 类</h3><p>ArrayList 类是 java.util 工具类的代表。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ArrayList&lt;Egg&gt; myList = <span class="keyword">new</span> ArrayList&lt;Egg&gt;();</div><div class="line"></div><div class="line"><span class="comment">//虽然 ArrayList 里返回的是 Object，但编译器会帮你做类型转换，转成 Egg 类型</span></div></pre></td></tr></table></figure><p>新的 ArrayList 对象虽然和数组一样会创建在堆上，但他们有本质的不同</p><table><thead><tr><th style="text-align:center">ArrayList</th><th style="text-align:center">数组</th></tr></thead><tbody><tr><td style="text-align:center">使用 ArrayList，只是运用 ArrayList 类型的对象，跟使用其他对象一样，用 “.” 运算符调用它的方法。</td><td style="text-align:center">使用数组，要用特殊的数组语法 []，无法调用它的方法，最多只能存取它的 length 实例变量。</td></tr><tr><td style="text-align:center">ArrayList 会自动管理大小</td><td style="text-align:center">数组要定义它的大小，且大小不能改变</td></tr><tr><td style="text-align:center">ArrayList 只能携带对象，不能装 primitive 主数据类型，但是非要装的话，编译器会自动将 primitive 包装成 Object ，再放入 ArrayList 中</td><td style="text-align:center">在装载 primitive 主数据类型时，数组比 ArrayList 快</td></tr><tr><td style="text-align:center"><string> 是类型参数，代表是 String 的集合</string></td></tr></tbody></table><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/93zI2w" alt=""></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/h4f7Lr" alt=""></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/qnBqcw" alt=""></p><h3 id="短运算的使用"><a href="#短运算的使用" class="headerlink" title="短运算的使用"></a>短运算的使用</h3><p>可以用这种方式避免调用内容为 null 的指针变量：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>( refVar ! = <span class="keyword">null</span> &amp;&amp; refVar.isValidType())&#123;</div><div class="line">  <span class="comment">//执行有效变量的工作</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Java-的垃圾回收&quot;&gt;&lt;a href=&quot;#Java-的垃圾回收&quot; class=&quot;headerlink&quot; title=&quot;Java  的垃圾回收&quot;&gt;&lt;/a&gt;Java  的垃圾回收&lt;/h2&gt;&lt;p&gt;p40&lt;/p&gt;
&lt;h2 id=&quot;对象
      
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
      <category term="Head First Java" scheme="http://yoursite.com/categories/Java/Head-First-Java/"/>
    
    
      <category term="Head First Java" scheme="http://yoursite.com/tags/Head-First-Java/"/>
    
  </entry>
  
  <entry>
    <title>Android 开发中遇到的 bug</title>
    <link href="http://yoursite.com/2017/10/30/Android-developing-bug/"/>
    <id>http://yoursite.com/2017/10/30/Android-developing-bug/</id>
    <published>2017-10-30T09:36:34.000Z</published>
    <updated>2017-11-02T03:18:01.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images.unsplash.com/photo-1496264057429-6a331647b69e?auto=format&amp;fit=crop&amp;w=1502&amp;q=60&amp;ixid=dW5zcGxhc2guY29tOzs7Ozs%3D" alt=""></p><a id="more"></a><h2 id="NoSuchMethodError-No-static-method-wrapSharedElementTransition"><a href="#NoSuchMethodError-No-static-method-wrapSharedElementTransition" class="headerlink" title="NoSuchMethodError: No static method wrapSharedElementTransition"></a>NoSuchMethodError: No static method wrapSharedElementTransition</h2><p>上汽大通项目遇到火山级 bug，点击</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">java.lang.NoSuchMethodError: <span class="function">No <span class="keyword">static</span> method <span class="title">wrapSharedElementTransition</span><span class="params">(Ljava/lang/Object;)</span>Ljava/lang/Object</span>; in <span class="class"><span class="keyword">class</span> <span class="title">Landroid</span>/<span class="title">support</span>/<span class="title">v4</span>/<span class="title">app</span>/<span class="title">FragmentTransitionCompat21</span></span>; <span class="function">or its <span class="keyword">super</span> <span class="title">classes</span> <span class="params">(declaration of <span class="string">'android.support.v4.app.FragmentTransitionCompat21'</span> appears in /data/app/com.example.aidrive2<span class="number">-1</span>/base.apk)</span></span></div><div class="line"><span class="function">                                                                          at android.support.v4.app.BackStackRecord.<span class="title">getSharedElementTransition</span><span class="params">(BackStackRecord.java:<span class="number">1156</span>)</span></span></div><div class="line"><span class="function">                                                                          at android.support.v4.app.BackStackRecord.<span class="title">configureTransitions</span><span class="params">(BackStackRecord.java:<span class="number">1222</span>)</span></span></div><div class="line"><span class="function">                                                                          at android.support.v4.app.BackStackRecord.<span class="title">beginTransition</span><span class="params">(BackStackRecord.java:<span class="number">1112</span>)</span></span></div><div class="line"><span class="function">                                                                          at android.support.v4.app.BackStackRecord.<span class="title">run</span><span class="params">(BackStackRecord.java:<span class="number">721</span>)</span></span></div><div class="line"><span class="function">                                                                          at android.support.v4.app.FragmentManagerImpl.<span class="title">execPendingActions</span><span class="params">(FragmentManager.java:<span class="number">1677</span>)</span></span></div><div class="line"><span class="function">                                                                          at android.support.v4.app.FragmentManagerImpl$1.<span class="title">run</span><span class="params">(FragmentManager.java:<span class="number">536</span>)</span></span></div><div class="line"><span class="function">                                                                          at android.os.Handler.<span class="title">handleCallback</span><span class="params">(Handler.java:<span class="number">815</span>)</span></span></div><div class="line"><span class="function">                                                                          at android.os.Handler.<span class="title">dispatchMessage</span><span class="params">(Handler.java:<span class="number">104</span>)</span></span></div><div class="line"><span class="function">                                                                          at android.os.Looper.<span class="title">loop</span><span class="params">(Looper.java:<span class="number">194</span>)</span></span></div><div class="line"><span class="function">                                                                          at android.app.ActivityThread.<span class="title">main</span><span class="params">(ActivityThread.java:<span class="number">5556</span>)</span></span></div><div class="line"><span class="function">                                                                          at java.lang.reflect.Method.<span class="title">invoke</span><span class="params">(Native Method)</span></span></div><div class="line"><span class="function">                                                                          at java.lang.reflect.Method.<span class="title">invoke</span><span class="params">(Method.java:<span class="number">372</span>)</span></span></div><div class="line"><span class="function">                                                                          at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.<span class="title">run</span><span class="params">(ZygoteInit.java:<span class="number">967</span>)</span></span></div><div class="line"><span class="function">                                                                          at com.android.internal.os.ZygoteInit.<span class="title">main</span><span class="params">(ZygoteInit.java:<span class="number">762</span>)</span></span></div></pre></td></tr></table></figure><h2 id="app-dexDebug：-Library-Java-JavaVirtualMachines-jdk1-8-0-92-jdk-Contents-Home-bin-java’’-finished-with-non-zero-exit-value-2"><a href="#app-dexDebug：-Library-Java-JavaVirtualMachines-jdk1-8-0-92-jdk-Contents-Home-bin-java’’-finished-with-non-zero-exit-value-2" class="headerlink" title="app:dexDebug：/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/bin/java’’ finished with non-zero exit value 2"></a>app:dexDebug：/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/bin/java’’ finished with non-zero exit value 2</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Error:Execution failed <span class="keyword">for</span> task <span class="string">':app:dexDebug'</span>. &gt; com.android.ide.common.process.ProcessException: org.gradle.process.internal.ExecException: Process <span class="string">'command '</span>/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/bin/java<span class="string">''</span> finished with non-zero exit value <span class="number">2</span></div></pre></td></tr></table></figure><p>是 app/build.gradle 依赖包的版本问题，</p><p>参考：</p><p><a href="https://stackoverflow.com/questions/30001051/appdexdebug-execexception-finished-with-non-zero-exit-value-2" target="_blank" rel="external">https://stackoverflow.com/questions/30001051/appdexdebug-execexception-finished-with-non-zero-exit-value-2</a></p><p><a href="http://www.cnblogs.com/creasylai19/p/5027757.html" target="_blank" rel="external">http://www.cnblogs.com/creasylai19/p/5027757.html</a></p><p>状态：未解决</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1496264057429-6a331647b69e?auto=format&amp;amp;fit=crop&amp;amp;w=1502&amp;amp;q=60&amp;amp;ixid=dW5zcGxhc2guY29tOzs7Ozs%3D&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="Android Developing Bug" scheme="http://yoursite.com/categories/Android/Android-Developing-Bug/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="bug" scheme="http://yoursite.com/tags/bug/"/>
    
  </entry>
  
  <entry>
    <title>论文相关</title>
    <link href="http://yoursite.com/2017/10/29/MyPaper/"/>
    <id>http://yoursite.com/2017/10/29/MyPaper/</id>
    <published>2017-10-29T14:11:38.000Z</published>
    <updated>2017-11-02T03:22:39.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images.unsplash.com/photo-1438159510492-d44b489bd1b6?auto=format&amp;fit=crop&amp;w=1500&amp;q=60&amp;ixid=dW5zcGxhc2guY29tOzs7Ozs%3D" alt=""></p><a id="more"></a><p><a href="http://www.cheyun.com/content/10999" target="_blank" rel="external">彩虹无线发布“立方体计划”：前装车联网大数据的两种玩法</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1438159510492-d44b489bd1b6?auto=format&amp;amp;fit=crop&amp;amp;w=1500&amp;amp;q=60&amp;amp;ixid=dW5zcGxhc2guY29tOzs7Ozs%3D&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="毕设论文" scheme="http://yoursite.com/categories/%E6%AF%95%E8%AE%BE%E8%AE%BA%E6%96%87/"/>
    
      <category term="材料收集" scheme="http://yoursite.com/categories/%E6%AF%95%E8%AE%BE%E8%AE%BA%E6%96%87/%E6%9D%90%E6%96%99%E6%94%B6%E9%9B%86/"/>
    
    
  </entry>
  
  <entry>
    <title>Hencoder 朱凯的高级教程</title>
    <link href="http://yoursite.com/2017/10/29/hencoder/"/>
    <id>http://yoursite.com/2017/10/29/hencoder/</id>
    <published>2017-10-29T13:57:51.000Z</published>
    <updated>2017-11-02T03:21:03.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images.unsplash.com/photo-1470328358326-dee4879da669?auto=format&amp;fit=crop&amp;w=2700&amp;q=60&amp;ixid=dW5zcGxhc2guY29tOzs7Ozs%3D" alt=""></p><a id="more"></a><h2 id="给高级-Android-工程师的进阶手册"><a href="#给高级-Android-工程师的进阶手册" class="headerlink" title="给高级 Android 工程师的进阶手册"></a>给高级 Android 工程师的进阶手册</h2><p>第一讲，讲 UI </p><p>一般使用 自带控件 + 开源库，可以实现大部分 UI 效果。但一些新颖的效果，要自定义 View 来实现。</p><p>自定义 View 的 3 个关键点：</p><ol><li>布局</li><li>绘制</li><li>触摸反馈</li></ol><p>听课：</p><p>录播的视频 + 文字 + 练习项目。视频负责打通概念，文字负责阐述细节，练习项目负责最后一公里，让你从「我懂了」变成「我会了」</p><h2 id="自定义-View-1-1-绘制基础"><a href="#自定义-View-1-1-绘制基础" class="headerlink" title="自定义 View 1-1 绘制基础"></a>自定义 View 1-1 绘制基础</h2><p>绘制就是控件内容的显示。</p><p>自定义绘制就是你来接管绘制的过程，操作绘制细节。使用系统 API 是绘制不出柱状图和饼形图的，即使绘制出来，性能也不佳，这时要使用自定义绘制 View。</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/FjWJE" alt=""></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/xA8moN" alt=""></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/ibMahJ" alt=""></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/K3h2BO" alt=""></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/PRepXD" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1470328358326-dee4879da669?auto=format&amp;amp;fit=crop&amp;amp;w=2700&amp;amp;q=60&amp;amp;ixid=dW5zcGxhc2guY29tOzs7Ozs%3D&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="Hencoder 朱凯的高级教程" scheme="http://yoursite.com/categories/Android/Hencoder-%E6%9C%B1%E5%87%AF%E7%9A%84%E9%AB%98%E7%BA%A7%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="朱凯" scheme="http://yoursite.com/tags/%E6%9C%B1%E5%87%AF/"/>
    
  </entry>
  
  <entry>
    <title>颠覆你的传统英语学习 - 杨萃先</title>
    <link href="http://yoursite.com/2017/10/27/Pronunciation-of-Miss-Yang/"/>
    <id>http://yoursite.com/2017/10/27/Pronunciation-of-Miss-Yang/</id>
    <published>2017-10-27T06:06:04.000Z</published>
    <updated>2017-11-01T06:49:45.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images.unsplash.com/photo-1466854076813-4aa9ac0fc347?auto=format&amp;fit=crop&amp;w=2400&amp;q=60&amp;ixid=dW5zcGxhc2guY29tOzs7Ozs%3D" alt=""></p><a id="more"></a><p>视频地址：<a href="https://search.bilibili.com/all?keyword=%E6%92%95%E6%8E%89%E5%8D%95%E8%AF%8D%E8%AF%AD%E6%B3%95%E4%B9%A6%EF%BC%8C%E9%A2%A0%E8%A6%86%E4%BD%A0%E7%9A%84%E4%BC%A0%E7%BB%9F%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0&amp;from_source=banner_search" target="_blank" rel="external">撕掉单词语法书，颠覆你的传统英语学习</a></p><h2 id="第-0-课-找对方法"><a href="#第-0-课-找对方法" class="headerlink" title="第 0 课 - 找对方法"></a>第 0 课 - 找对方法</h2><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/vgXRlR" alt="正确的方法"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/4WF92Q" alt="听100小时"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/XeudRn" alt="学生活中的词"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/zTtYUW" alt="说100小时"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/cx2Hm8" alt="听好听的"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/YRjqHy" alt="先练听说"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/Oe1opZ" alt="背课文"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/YnNMY5" alt="下载app"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/arc4KG" alt="每天找5个生词"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/okCL7C" alt="听这些"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/vl2u5t" alt="喜马拉雅上的这些事之前的学员"></p><p>本节课作业：</p><ol><li>下载 app，找到和自己生活、工作密切相关的部分听，听不懂的，立马查，可以看字幕，怎么能听懂怎么听。听满 100 小时。</li><li>生活中，环境中，只要是不会的生词，立马查。至少找到五个不会的。</li><li>关注老师个人公众号 “途正英语”。看老师的文章和小故事。</li><li>找志同道合的小伙伴讨论，说英语。</li></ol><h2 id="第-1-课-背单词大法"><a href="#第-1-课-背单词大法" class="headerlink" title="第 1 课 - 背单词大法"></a>第 1 课 - 背单词大法</h2><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/yVXeUo" alt="背单词"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/VGy0QW" alt="不推荐的方法"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/TdPGqD" alt="什么时候查"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/PKBv4G" alt="推荐的方法"></p><p>记单词：</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/zhhfSo" alt="记单词"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/jP8W3" alt=""></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/vAWBm9" alt="象形"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/ZXC66N" alt="衍生方法"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/WtmDWL" alt="象象"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/j2q1ji" alt="象象"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/yzHndv" alt="合成"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/w3Mr7S" alt="合成"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/CD6ksy" alt="合成"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/dqaCMt" alt="词根词缀"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/9KkL6i" alt="词根词缀"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/fcYBZS" alt="ceed = walk"></p><p>作业：</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/ehbhKH" alt="作业"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/ojYfdm" alt="作业"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1466854076813-4aa9ac0fc347?auto=format&amp;amp;fit=crop&amp;amp;w=2400&amp;amp;q=60&amp;amp;ixid=dW5zcGxhc2guY29tOzs7Ozs%3D&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="英语" scheme="http://yoursite.com/categories/%E8%8B%B1%E8%AF%AD/"/>
    
      <category term="英语口语" scheme="http://yoursite.com/categories/%E8%8B%B1%E8%AF%AD/%E8%8B%B1%E8%AF%AD%E5%8F%A3%E8%AF%AD/"/>
    
    
      <category term="英语口语" scheme="http://yoursite.com/tags/%E8%8B%B1%E8%AF%AD%E5%8F%A3%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>纪老师英语音标课程</title>
    <link href="http://yoursite.com/2017/10/26/Pronunciation-of-Miss-Ji/"/>
    <id>http://yoursite.com/2017/10/26/Pronunciation-of-Miss-Ji/</id>
    <published>2017-10-26T05:00:14.000Z</published>
    <updated>2017-11-02T03:17:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images.unsplash.com/photo-1485738422979-f5c462d49f74?w=1375&amp;ixid=dW5zcGxhc2guY29tOzs7Ozs%3D" alt="自由女神"></p><a id="more"></a><h2 id="视频地址"><a href="#视频地址" class="headerlink" title="视频地址"></a>视频地址</h2><p><a href="http://www.360doc.com/content/14/0801/16/9675619_398636221.shtml" target="_blank" rel="external">纪老师英语 - 音标篇</a></p><p><a href="http://static.youku.com/v20170518.0/v/swf/upsplayer/loader.swf?VideoIDS=XMTQ5MjM2NDI4&amp;embedid=NTguMjA5Ljc4LjE4OQIzNzMwOTEwNwJ3d3cuMzYwZG9jLmNvbQIvY29udGVudC8xNC8wODAxLzE2Lzk2NzU2MTlfMzk4NjM2MjIxLnNodG1s&amp;wd=&amp;winType=BDskin&amp;cna=tJySD%2BT%2BAQ0CAXTiYawfmTuw&amp;partnerid=0edbfd2e4fc91b72&amp;vext=pid%253D0edbfd2e4fc91b72%2526emb%253DNTguMjA5Ljc4LjE4OQIzNzMwOTEwNwJ3d3cuMzYwZG9jLmNvbQIvY29udGVudC8xNC8wODAxLzE2Lzk2NzU2MTlfMzk4NjM2MjIxLnNodG1s%2526bc%253D%2526cna%253DtJySD%2BT%2BAQ0CAXTiYawfmTuw%2526vvlogext%253Dpc_i%25253D14603834142639jT%252526pc_u%25253D-%252526rvpvid%25253D-%252526rycid%25253D-%252526yvft%25253D1508992567232%252526vsidc%25253D1%252526seid%25253D1509027642371h8w%252526vstp%25253D9%252526svstp%25253D3%2526type%253D0%2526embsig%253D1_1509028782_ff5ca560dc4dd7c1dd0c894c14395fbf" target="_blank" rel="external">纪老师 英语音标口诀记忆法 – 音标一 5 个元音 + 1 个辅音</a></p><p><a href="http://static.youku.com/v20170518.0/v/swf/upsplayer/loader.swf?VideoIDS=XMzc0ODQ5MDQ0&amp;embedid=NTguMjA5Ljc4LjE4OQI5MzcxMjI2MQJ3d3cuMzYwZG9jLmNvbQIvY29udGVudC8xNC8wODAxLzE2Lzk2NzU2MTlfMzk4NjM2MjIxLnNodG1s&amp;wd=&amp;winType=BDskin&amp;cna=tJySD%2BT%2BAQ0CAXTiYawfmTuw&amp;partnerid=0edbfd2e4fc91b72&amp;vext=pid%253D0edbfd2e4fc91b72%2526emb%253DNTguMjA5Ljc4LjE4OQI5MzcxMjI2MQJ3d3cuMzYwZG9jLmNvbQIvY29udGVudC8xNC8wODAxLzE2Lzk2NzU2MTlfMzk4NjM2MjIxLnNodG1s%2526bc%253D%2526cna%253DtJySD%2BT%2BAQ0CAXTiYawfmTuw%2526vvlogext%253Dpc_i%25253D14603834142639jT%252526pc_u%25253D-%252526rvpvid%25253D-%252526rycid%25253D-%252526yvft%25253D1508992567232%252526vsidc%25253D1%252526seid%25253D1509027642371h8w%252526vstp%25253D8%252526svstp%25253D2%2526type%253D0%2526embsig%253D1_1509028759_a2b5284c60c3c2ed7a9d57714d0c4d70" target="_blank" rel="external">纪老师 英语音标口诀记忆法 – 音标二 5 个辅音的发音方法</a></p><p><a href="http://static.youku.com/v20170518.0/v/swf/upsplayer/loader.swf?VideoIDS=XMzc0ODQ5MTY0&amp;embedid=MjE5LjIyOC4xNDYuMTkxAjkzNzEyMjkxAnd3dy4zNjBkb2MuY29tAi9jb250ZW50LzE0LzA4MDEvMTYvOTY3NTYxOV8zOTg2MzYyMjEuc2h0bWw%3D&amp;wd=&amp;winType=BDskin&amp;cna=tJySD%2BT%2BAQ0CAXTiYawfmTuw&amp;partnerid=0edbfd2e4fc91b72&amp;vext=pid%253D0edbfd2e4fc91b72%2526emb%253DMjE5LjIyOC4xNDYuMTkxAjkzNzEyMjkxAnd3dy4zNjBkb2MuY29tAi9jb250ZW50LzE0LzA4MDEvMTYvOTY3NTYxOV8zOTg2MzYyMjEuc2h0bWw%253D%2526bc%253D%2526cna%253DtJySD%2BT%2BAQ0CAXTiYawfmTuw%2526vvlogext%253Dpc_i%25253D14603834142639jT%252526pc_u%25253D-%252526rvpvid%25253D1509073572844NndZCw-1509073572854%252526rycid%25253D-%252526yvft%25253D1508992567232%252526vsidc%25253D1%252526seid%25253D1509072880602Ns8%252526vstp%25253D15%252526svstp%25253D6%2526type%253D0%2526embsig%253D1_1509077805_3ceabeebb636125f6e25df3edb68a97e" target="_blank" rel="external">纪老师 英语音标口诀记忆法 – 音标三  8 个双元音的发音方法</a></p><p><a href="http://static.youku.com/v20170518.0/v/swf/upsplayer/loader.swf?VideoIDS=XMzc0ODQ5Mzg0&amp;embedid=NTguMjA5Ljc5LjE4NQI5MzcxMjM0NgJ3d3cuMzYwZG9jLmNvbQIvY29udGVudC8xNC8wODAxLzE2Lzk2NzU2MTlfMzk4NjM2MjIxLnNodG1s&amp;wd=&amp;winType=BDskin&amp;cna=tJySD%2BT%2BAQ0CAXTiYawfmTuw&amp;partnerid=0edbfd2e4fc91b72&amp;vext=pid%253D0edbfd2e4fc91b72%2526emb%253DNTguMjA5Ljc5LjE4NQI5MzcxMjM0NgJ3d3cuMzYwZG9jLmNvbQIvY29udGVudC8xNC8wODAxLzE2Lzk2NzU2MTlfMzk4NjM2MjIxLnNodG1s%2526bc%253D%2526cna%253DtJySD%2BT%2BAQ0CAXTiYawfmTuw%2526vvlogext%253Dpc_i%25253D14603834142639jT%252526pc_u%25253D-%252526rvpvid%25253D-%252526rycid%25253D-%252526yvft%25253D1508992567232%252526vsidc%25253D1%252526seid%25253D1509285631592tEg%252526vstp%25253D27%252526svstp%25253D5%2526type%253D0%2526embsig%253D1_1509289072_a16950d7e7b3d58a563f53d5c5866b3a" target="_blank" rel="external">纪老师 英语音标口诀记忆法 – 音标四 12 个辅音的发音方法</a></p><p><a href="http://v.youku.com/v_show/id_XMzc0ODQ5NjAw.html?spm=a2h0j.8191423.module_basic_relation.5~5!2~5~5!24~5!2~1~3~A" target="_blank" rel="external">纪老师 英语音标口诀记忆法 – 音标五 p、k、t 清音浊化</a></p><p><a href="http://v.youku.com/v_show/id_XNjM4OTY3MDYw.html?spm=a2h0j.8191423.module_basic_relation.5~5!2~5~5!7~5~5~A" target="_blank" rel="external">纪老师 英语音标口诀记忆法 – 音标实战篇 英语习惯用语发音练习 1 - 6 句</a></p><p><a href="http://my.tv.sohu.com/us/63345012/63891417.shtml" target="_blank" rel="external">纪老师 英语音标口诀记忆法 – 音标实战篇 英语习惯用语发音练习 32 句</a></p><p><a href="http://v.youku.com/v_show/id_XNjM4OTc5OTYw.html?spm=a2h0j.8191423.module_basic_relation.5~5!2~5~5!6~5~5~A" target="_blank" rel="external">纪老师 英语音标口诀记忆法 – 音标实战篇 英语习惯用语发音练习 71 - 79 句</a></p><p><a href="http://v.youku.com/v_show/id_XNjM4OTY3NjAw.html?spm=a2h0j.8191423.module_basic_relation.5~5!2~5~5!11~5~5~A" target="_blank" rel="external">纪老师 英语音标口诀记忆法 – 音标实战篇 英语习惯用语发音练习 108 - 135 句</a></p><h2 id="纪老师-48个国际音标的记忆口诀讲义地址"><a href="#纪老师-48个国际音标的记忆口诀讲义地址" class="headerlink" title="纪老师 - 48个国际音标的记忆口诀讲义地址"></a>纪老师 - 48个国际音标的记忆口诀讲义地址</h2><p><a href="https://pan.baidu.com/s/1bOR0ke" target="_blank" rel="external">纪老师 - 48个国际音标的记忆口诀【讲义】</a></p><h2 id="音标一"><a href="#音标一" class="headerlink" title="音标一"></a>音标一</h2><p>元音：20 个，相当于韵母</p><p>辅音：28 个，相当于声母</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/TjXfoR" alt="所有的元音辅音"></p><p>第一节学习 5 个元音和 1 个辅音：</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/jpIj8B" alt="5元1辅"></p><p>发言口诀：</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/dmtQYO" alt="发言口诀"></p><h2 id="音标二"><a href="#音标二" class="headerlink" title="音标二"></a>音标二</h2><p>第二节学习 5 个辅音 </p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/Sjp1Eq" alt="5个辅音"></p><p>f、l、m、n  的发音：一种是读汉语拼音里的flmn，另一种是读这四个英文字母发音的尾音。</p><p>后面有可以一起拼读的就发flmn的音，没有一起拼读的音就发英文字母的尾音。</p><p>r 后面有可以一起拼读的音就发 ru 音，没有一起拼读的音就发 “儿”化音。</p><h2 id="音标三"><a href="#音标三" class="headerlink" title="音标三"></a>音标三</h2><p>第三节学习 8 个双元音。</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/IdAb5M" alt="8个双元音"></p><p>英语讲究「滑音」。双元音的读法是从第一个音向后面一个滑动。</p><p>新旧音标对比如下：</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/wnPSay" alt="新旧写法对比"></p><h2 id="音标四"><a href="#音标四" class="headerlink" title="音标四"></a>音标四</h2><p>12 个辅音的发音方法</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/1CxKoG" alt=""></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/jj2RCn" alt="噘嘴的s"></p><p>噘嘴的 s，发汉语拼音的平舌 s</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/wIOO9s" alt="噘嘴的z"></p><p>噘嘴的 z，发汉语拼音的平舌 z</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/6WJ37l" alt="咬舌尖的s"></p><p>噘嘴的 s，发汉语拼音中的咬舌 s</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/4q1xp1" alt="咬舌尖的r"></p><p>咬舌尖的 r，发汉语拼音中的 r</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/Sxz4D8" alt="噘嘴的ch"></p><p>噘嘴的 ch，发汉语拼音的翘舌 ch</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/W1Wjb1" alt="噘嘴的zh"></p><p>噘嘴的 zh，发汉语拼音的翘舌 zh</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/jM386r" alt="噘嘴的chu"></p><p>噘嘴的 chu，发汉语拼音的翘舌 chu</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/O4oKa0" alt="噘嘴的zhu"></p><p>噘嘴的 zhu，发汉语拼音的翘舌 zhu</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/CVnlS" alt="ts"></p><p>chi，发音在 c 与 ch 之间，我觉得是 ci</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/0NTCJN" alt="dz"></p><p>zhi，发音在 z 与 zh 之间，我觉得是 zi</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/naFFAQ" alt="j"></p><p> y，发汉语拼音 yi</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/uX9Byt" alt="v"></p><p>不能噘嘴的 wu，上牙轻抚下唇。</p><h2 id="音标五"><a href="#音标五" class="headerlink" title="音标五"></a>音标五</h2><p>清音浊化问题，也叫音变。</p><p>p k t 胆子小，见到 s 须变音。</p><p>p 变 b，k 变 g，t 要变成 d。</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/mcw2KB" alt="清音浊化"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/v0ymss" alt="口诀"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/fw6PLU" alt="规则"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/oBn1E7" alt="举例1"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/jJl0Fr" alt="举例2"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/LRmRem" alt="举例3"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/ivMPBJ" alt="规则2"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/L8rY9N" alt="注意"></p><p>英语音标中一共有 48 个音素，讲了 31 个特殊的音素，剩下 17 个音素与汉语拼音发音相似。</p><p>如 p，读短促的 p，k，读短促的 k。</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/u0Ecxu" alt="48 个音标汇总"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1485738422979-f5c462d49f74?w=1375&amp;amp;ixid=dW5zcGxhc2guY29tOzs7Ozs%3D&quot; alt=&quot;自由女神&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="英语" scheme="http://yoursite.com/categories/%E8%8B%B1%E8%AF%AD/"/>
    
      <category term="音标" scheme="http://yoursite.com/categories/%E8%8B%B1%E8%AF%AD/%E9%9F%B3%E6%A0%87/"/>
    
    
      <category term="音标" scheme="http://yoursite.com/tags/%E9%9F%B3%E6%A0%87/"/>
    
  </entry>
  
  <entry>
    <title>慕课网 - Android 通用框架设计与完整电商 APP 开发</title>
    <link href="http://yoursite.com/2017/10/20/imooc-Android-Complete-e-commerce-app/"/>
    <id>http://yoursite.com/2017/10/20/imooc-Android-Complete-e-commerce-app/</id>
    <published>2017-10-20T02:45:21.000Z</published>
    <updated>2017-11-01T07:02:33.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images.unsplash.com/photo-1486758206125-94d07f414b1c?auto=format&amp;fit=crop&amp;w=2700&amp;q=60&amp;ixid=dW5zcGxhc2guY29tOzs7Ozs%3D" alt=""></p><a id="more"></a><h2 id="用到的-GitHub-上的库"><a href="#用到的-GitHub-上的库" class="headerlink" title="用到的 GitHub 上的库"></a>用到的 GitHub 上的库</h2><h3 id="字体库"><a href="#字体库" class="headerlink" title="字体库"></a>字体库</h3><p><a href="https://github.com/JoanZapata/android-iconify" target="_blank" rel="external">JoanZapata 字体库</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//字体图标</span></div><div class="line">compile <span class="string">'com.joanzapata.iconify:android-iconify-ionicons:2.2.2'</span></div><div class="line">compile <span class="string">'com.joanzapata.iconify:android-iconify-fontawesome:2.2.2'</span></div></pre></td></tr></table></figure><h3 id="Fragmentation-的库"><a href="#Fragmentation-的库" class="headerlink" title="Fragmentation 的库"></a>Fragmentation 的库</h3><p><a href="https://github.com/YoKeyword/Fragmentation" target="_blank" rel="external">Fragmentation 的库</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//Fragment依赖</span></div><div class="line">compile <span class="string">'me.yokeyword:fragmentation:1.1.6'</span></div><div class="line">compile <span class="string">'me.yokeyword:fragmentation-swipeback:1.1.6'</span></div></pre></td></tr></table></figure><h3 id="视图注入的库-ButterKnife"><a href="#视图注入的库-ButterKnife" class="headerlink" title="视图注入的库 ButterKnife"></a>视图注入的库 ButterKnife</h3><p>ButterKnife 的配置要参考<a href="https://github.com/JakeWharton/butterknife" target="_blank" rel="external">ButterKnife</a>官网，要配置 3 个地方</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//ButterKnife依赖</span></div><div class="line">compile <span class="string">'com.jakewharton:butterknife:8.8.1'</span></div><div class="line">annotationProcessor <span class="string">'com.jakewharton:butterknife-compiler:8.8.1'</span></div></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">buildscript &#123;</div><div class="line">    repositories &#123;</div><div class="line">        jcenter()</div><div class="line">    &#125;</div><div class="line">    dependencies &#123;</div><div class="line">        classpath <span class="string">'com.android.tools.build:gradle:2.3.3'</span></div><div class="line">        <span class="comment">// ButterKnife 插件</span></div><div class="line">        classpath <span class="string">'com.jakewharton:butterknife-gradle-plugin:8.8.1'</span></div><div class="line">        <span class="comment">// <span class="doctag">NOTE:</span> Do not place your application dependencies here; they belong</span></div><div class="line">        <span class="comment">// in the individual module build.gradle files</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">allprojects &#123;</div><div class="line">    repositories &#123;</div><div class="line">        jcenter()</div><div class="line">        mavenCentral()</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apply plugin: <span class="string">'com.android.library'</span></div><div class="line">apply plugin: <span class="string">'com.jakewharton.butterknife'</span></div></pre></td></tr></table></figure><p>BufferKnife 插件的作用是生成 R2 的类，R2 类是生成视图绑定需要的唯一 ID，资源文件 R 只能在为 application 类型的 module 里使用，为 library 类型的 module 使用 BufferKnife 插件根据 R 生成 R2 的资源文件来访问视图绑定的 ID。</p><h3 id="网络框架-retrofit"><a href="#网络框架-retrofit" class="headerlink" title="网络框架 retrofit"></a>网络框架 retrofit</h3><p><a href="http://square.github.io/retrofit/" target="_blank" rel="external">retrofit</a></p><p><a href="http://www.ruanyifeng.com/blog/2011/09/restful.html" target="_blank" rel="external">理解 RESTful 架构</a></p><p><a href="http://www.csdn.net/article/2013-06-13/2815744-RESTful-API" target="_blank" rel="external">RESTful API 设计最佳实践</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//网络请求依赖</span></div><div class="line">    compile <span class="string">'com.squareup.okio:okio:1.13.0'</span></div><div class="line">    compile <span class="string">'com.squareup.okhttp3:okhttp:3.8.1'</span></div><div class="line">    compile <span class="string">'com.squareup.retrofit2:retrofit:2.3.0'</span></div><div class="line">    compile <span class="string">'com.squareup.retrofit2:converter-scalars:2.3.0'</span></div></pre></td></tr></table></figure><h3 id="Loading-加载库"><a href="#Loading-加载库" class="headerlink" title="Loading 加载库"></a>Loading 加载库</h3><p><a href="https://github.com/81813780/AVLoadingIndicatorView" target="_blank" rel="external">AVLoadingIndicatorView</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//loading 依赖</span></div><div class="line">    compile <span class="string">'com.wang.avi:library:2.1.3'</span></div></pre></td></tr></table></figure><h3 id="启动页倒计时"><a href="#启动页倒计时" class="headerlink" title="启动页倒计时"></a>启动页倒计时</h3><h3 id="首次启动可以滑动"><a href="#首次启动可以滑动" class="headerlink" title="首次启动可以滑动"></a>首次启动可以滑动</h3><p><a href="https://github.com/saiwu-bigkoo/Android-ConvenientBanner" target="_blank" rel="external">Android-ConvenientBanner</a> 全屏的广告轮播</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1486758206125-94d07f414b1c?auto=format&amp;amp;fit=crop&amp;amp;w=2700&amp;amp;q=60&amp;amp;ixid=dW5zcGxhc2guY29tOzs7Ozs%3D&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="慕课网" scheme="http://yoursite.com/categories/%E6%85%95%E8%AF%BE%E7%BD%91/"/>
    
      <category term="Android 通用框架设计与完整电商 APP 开发" scheme="http://yoursite.com/categories/%E6%85%95%E8%AF%BE%E7%BD%91/Android-%E9%80%9A%E7%94%A8%E6%A1%86%E6%9E%B6%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%8C%E6%95%B4%E7%94%B5%E5%95%86-APP-%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android 通用框架" scheme="http://yoursite.com/tags/Android-%E9%80%9A%E7%94%A8%E6%A1%86%E6%9E%B6/"/>
    
      <category term="未解决的 bug" scheme="http://yoursite.com/tags/%E6%9C%AA%E8%A7%A3%E5%86%B3%E7%9A%84-bug/"/>
    
  </entry>
  
  <entry>
    <title>慕课网 - 懒人必备之 Android 效率开发框架</title>
    <link href="http://yoursite.com/2017/10/16/imooc-Android-Framework-video-8302/"/>
    <id>http://yoursite.com/2017/10/16/imooc-Android-Framework-video-8302/</id>
    <published>2017-10-16T02:57:38.000Z</published>
    <updated>2017-11-01T06:48:34.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images.unsplash.com/photo-1484151709479-3996843263cf?auto=format&amp;fit=crop&amp;w=2700&amp;q=60&amp;ixid=dW5zcGxhc2guY29tOzs7Ozs%3D" alt=""></p><a id="more"></a><h2 id="什么是框架"><a href="#什么是框架" class="headerlink" title="什么是框架"></a>什么是框架</h2><blockquote><p>框架是地基，地基打的好，不管业务层有多大的变化，都不会影响到正常的开发.</p><p>不用框架，理论上讲是可以的，但是开发成本就变高了，很多集成服务要自己搭建</p><p>Android 中哪些可以抽象成为框架的：</p><ol><li>网络模块</li><li>图片缓存模块</li><li>数据库模块</li><li>UI 基础</li></ol><p>把这些抽出来之后，只要写业务层就好了。</p></blockquote><h2 id="AndroidAnnotation"><a href="#AndroidAnnotation" class="headerlink" title="AndroidAnnotation"></a>AndroidAnnotation</h2><blockquote><p><a href="http://androidannotations.org/" target="_blank" rel="external">AndroidAnnotation 官网</a></p></blockquote><p>AndroidAnnotation 是基于注解的标签库，<a href="https://github.com/androidannotations/androidannotations/wiki/AvailableAnnotations" target="_blank" rel="external">所有标签</a>。</p><h3 id="AS-配置androidannotations"><a href="#AS-配置androidannotations" class="headerlink" title="AS 配置androidannotations"></a>AS 配置androidannotations</h3><p>app/build.gradle:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">def AAVersion = <span class="string">'4.3.0'</span></div><div class="line"></div><div class="line">dependencies &#123;</div><div class="line">    <span class="function">compile <span class="title">fileTree</span><span class="params">(dir: <span class="string">'libs'</span>, include: [<span class="string">'*.jar'</span>])</span></span></div><div class="line"><span class="function">    <span class="title">androidTestCompile</span><span class="params">(<span class="string">'com.android.support.test.espresso:espresso-core:2.2.2'</span>, &#123;</span></span></div><div class="line"><span class="function"><span class="params">        exclude group: <span class="string">'com.android.support'</span>, <span class="keyword">module</span>: <span class="string">'support-annotations'</span></span></span></div><div class="line"><span class="function"><span class="params">    &#125;)</span></span></div><div class="line"><span class="function">    compile 'com.android.support:appcompat-v7:25.3.1'</span></div><div class="line"><span class="function">    compile 'com.android.support.constraint:constraint-layout:1.0.1'</span></div><div class="line"><span class="function">    testCompile 'junit:junit:4.12'</span></div><div class="line"><span class="function"></span></div><div class="line"><span class="function">    <span class="comment">//androidannotations 注解标签库</span></span></div><div class="line"><span class="function">    annotationProcessor "org.androidannotations:androidannotations:$AAVersion"</span></div><div class="line"><span class="function">    compile "org.androidannotations:androidannotations-api:$AAVersion"</span></div><div class="line"><span class="function">&#125;</span></div></pre></td></tr></table></figure><p>AndroidManifest.xml 中每个使用 androidAnnotations 的 Activity 名字后面都要添加_</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;activity</div><div class="line">       android:name=<span class="string">".MainActivity_"</span></div><div class="line">       android:label=<span class="string">"FirstTest"</span>&gt;</div><div class="line">&lt;/activity&gt;</div></pre></td></tr></table></figure><blockquote><p>.MainActivity<em> 为什么要加 </em> ？</p><p>是 androidAnnotations ，在处理的过程中，生成的 .MainActivity_ 的 Activity。</p></blockquote><p>参考了：<a href="http://www.cnblogs.com/l2rf/p/4971825.html" target="_blank" rel="external">http://www.cnblogs.com/l2rf/p/4971825.html</a></p><p><a href="http://blog.csdn.net/xx326664162/article/details/68490059" target="_blank" rel="external">http://blog.csdn.net/xx326664162/article/details/68490059</a></p><p><a href="http://blog.csdn.net/doris_d/article/details/52634450" target="_blank" rel="external">http://blog.csdn.net/doris_d/article/details/52634450</a></p><p><a href="http://www.cnblogs.com/caobotao/p/5138935.html" target="_blank" rel="external">http://www.cnblogs.com/caobotao/p/5138935.html</a></p><p><a href="http://blog.csdn.net/caiwenfeng_for_23/article/details/45801151" target="_blank" rel="external">http://blog.csdn.net/caiwenfeng_for_23/article/details/45801151</a></p><p><a href="https://github.com/androidannotations/androidannotations/blob/master/examples/gradle/build.gradle" target="_blank" rel="external">https://github.com/androidannotations/androidannotations/blob/master/examples/gradle/build.gradle</a></p><p>没搞好，报错。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">Process: com.ning.helloworld, PID: <span class="number">14359</span></div><div class="line">                                                                    java.lang.RuntimeException: Unable to start activity ComponentInfo&#123;com.ning.helloworld/com.ning.helloworld.MainActivity_&#125;: java.lang.NullPointerException: Attempt to invoke virtual method <span class="string">'void android.widget.Button.setOnClickListener(android.view.View$OnClickListener)'</span> on a <span class="keyword">null</span> object reference</div><div class="line">                                                                        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:<span class="number">2470</span>)</div><div class="line">                                                                        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:<span class="number">2532</span>)</div><div class="line">                                                                        at android.app.ActivityThread.access$<span class="number">800</span>(ActivityThread.java:<span class="number">169</span>)</div><div class="line">                                                                        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:<span class="number">1421</span>)</div><div class="line">                                                                        at android.os.Handler.dispatchMessage(Handler.java:<span class="number">111</span>)</div><div class="line">                                                                        at android.os.Looper.loop(Looper.java:<span class="number">194</span>)</div><div class="line">                                                                        at android.app.ActivityThread.main(ActivityThread.java:<span class="number">5556</span>)</div><div class="line">                                                                        at java.lang.reflect.Method.invoke(Native Method)</div><div class="line">                                                                        at java.lang.reflect.Method.invoke(Method.java:<span class="number">372</span>)</div><div class="line">                                                                        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:<span class="number">967</span>)</div><div class="line">                                                                        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:<span class="number">762</span>)</div><div class="line">                                                                     Caused by: java.lang.NullPointerException: Attempt to invoke virtual method <span class="string">'void android.widget.Button.setOnClickListener(android.view.View$OnClickListener)'</span> on a <span class="keyword">null</span> object reference</div><div class="line">                                                                        at com.ning.helloworld.MainActivity.onCreate(MainActivity.java:<span class="number">67</span>)</div><div class="line">                                                                        at com.ning.helloworld.MainActivity_.onCreate(MainActivity_.java:<span class="number">33</span>)</div><div class="line">                                                                        at android.app.Activity.performCreate(Activity.java:<span class="number">5975</span>)</div><div class="line">                                                                        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:<span class="number">1111</span>)</div><div class="line">                                                                        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:<span class="number">2423</span>)</div><div class="line">                                                                        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:<span class="number">2532</span>) </div><div class="line">                                                                        at android.app.ActivityThread.access$<span class="number">800</span>(ActivityThread.java:<span class="number">169</span>) </div><div class="line">                                                                        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:<span class="number">1421</span>) </div><div class="line">                                                                        at android.os.Handler.dispatchMessage(Handler.java:<span class="number">111</span>) </div><div class="line">                                                                        at android.os.Looper.loop(Looper.java:<span class="number">194</span>) </div><div class="line">                                                                        at android.app.ActivityThread.main(ActivityThread.java:<span class="number">5556</span>) </div><div class="line">                                                                        at java.lang.reflect.Method.invoke(Native Method) </div><div class="line">                                                                        at java.lang.reflect.Method.invoke(Method.java:<span class="number">372</span>) </div><div class="line">                                                                        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:<span class="number">967</span>) </div><div class="line">                                                                        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:<span class="number">762</span>)</div></pre></td></tr></table></figure><h3 id="annotation-的使用"><a href="#annotation-的使用" class="headerlink" title="annotation  的使用"></a>annotation  的使用</h3><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/dxlqz9" alt="注解的使用"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/IHXb0Y" alt="注解的使用"></p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/AmzwZs" alt="注解的使用"></p><p>看到这：</p><p><img src="https://cdn-std.dprcdn.net/files/acc_587316/Vhqy9Z" alt="imooc"></p><p><a href="http://www.imooc.com/learn/431" target="_blank" rel="external">课程网址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1484151709479-3996843263cf?auto=format&amp;amp;fit=crop&amp;amp;w=2700&amp;amp;q=60&amp;amp;ixid=dW5zcGxhc2guY29tOzs7Ozs%3D&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="慕课网" scheme="http://yoursite.com/categories/%E6%85%95%E8%AF%BE%E7%BD%91/"/>
    
      <category term="懒人必备之 Android 效率开发框架" scheme="http://yoursite.com/categories/%E6%85%95%E8%AF%BE%E7%BD%91/%E6%87%92%E4%BA%BA%E5%BF%85%E5%A4%87%E4%B9%8B-Android-%E6%95%88%E7%8E%87%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="未解决的 bug" scheme="http://yoursite.com/tags/%E6%9C%AA%E8%A7%A3%E5%86%B3%E7%9A%84-bug/"/>
    
      <category term="Android 框架" scheme="http://yoursite.com/tags/Android-%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>Android 第一行代码</title>
    <link href="http://yoursite.com/2017/10/10/Android-%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81/"/>
    <id>http://yoursite.com/2017/10/10/Android-第一行代码/</id>
    <published>2017-10-10T02:37:41.000Z</published>
    <updated>2017-10-14T07:59:31.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images.unsplash.com/photo-1505538034984-f4cdc7503011?dpr=1&amp;auto=compress,format&amp;fit=crop&amp;w=1350&amp;h=&amp;q=80&amp;cs=tinysrgb&amp;crop=" alt="Android"></p><a id="more"></a><h2 id="Chapter-1-入门"><a href="#Chapter-1-入门" class="headerlink" title="Chapter 1  入门"></a>Chapter 1  入门</h2><h3 id="Android-各版本对应的-API"><a href="#Android-各版本对应的-API" class="headerlink" title="Android 各版本对应的 API"></a>Android 各版本对应的 API</h3><table><thead><tr><th>版本号</th><th>系统代号</th><th>API</th></tr></thead><tbody><tr><td>4.0.3 - 4.0.4</td><td>Ice Cream Sandwich</td><td>15</td></tr><tr><td>4.1.x   4.2.x   4.3</td><td>Jelly Bean</td><td>16  17  18</td></tr><tr><td>4.4</td><td>KitKat</td><td>19</td></tr><tr><td>5.0  5.1</td><td>Lollipop</td><td>21  22</td></tr><tr><td>6.0</td><td>Marshmallow</td><td>23</td></tr><tr><td>7.0  7.1</td><td>Nougat</td><td>24  25</td></tr><tr><td>8.0</td><td>Oreo</td><td>26</td></tr></tbody></table><h3 id="Android-程序的项目结构"><a href="#Android-程序的项目结构" class="headerlink" title="Android 程序的项目结构"></a>Android 程序的项目结构</h3><p><img src="https://dr5mo5s7lqrtc.cloudfront.net/items/3w002Z2B2X121y3o1p2d/%5B61c79e4b7e518b02860ca01bb09676c1%5D_Image%25202017-10-10%2520at%252011.21.29%2520%25E4%25B8%258A%25E5%258D%2588.png?X-CloudApp-Visitor-Id=2843916&amp;v=777f6d76" alt="项目结构"></p><ul><li>gradle 下包含了 gradle wrapper 的配置文件。</li><li>gradle.properties 是全局的 gradle 配置文件。这里配置的属性将会影响到项目中所有的 gradle 编译脚本。</li><li>app 是开发的主要工作目录。</li><li>其他都是些 AS 自动生成的文件，不需要修改。</li><li>.gitignore 文件，记录不需要提交到 Git 的东西，节省 Git 服务器资源和带宽、减少冲突。只在项目的根目录里创建这个文件就好，一般的 model 不需要这个文件。（慕课网 - Android 通用架构设计与完整电商App开发 学到的）</li></ul><h3 id="app下的目录结构"><a href="#app下的目录结构" class="headerlink" title="app下的目录结构"></a>app下的目录结构</h3><ol><li><p>build 里是编译时自动生成的文件，不需要改动。</p></li><li><p><strong>libs</strong> 里放的是你项目中使用到的第三方 <strong>jar</strong> 包，放在这里的 jar 包会被自动添加进构建路径中去。 </p></li><li><p>androidTest 是用来编写 Android Test 测试用例的，可以进行自动化测试</p></li><li><p><strong>java </strong> 里是放 Java 代码的地方。</p></li><li><p><strong>res</strong> 里 <strong>图片</strong>放在 <strong>drawable</strong> 中，<strong>布局</strong>放在 <strong>layout</strong> 中，<strong>字符</strong>放在 <strong>values</strong> 中，字符包括字符串、样式、颜色等配置，应用图标放在 mipmap 。                            </p><p> <strong>res 里的资源有以下两种引用方式：</strong>                                                                          </p><blockquote><p> 在代码中：通过 R.资源所在最近文件夹.资源名称，如 R.string.hellp_world    在 xml 中：通过 @资源所在最近文件夹/资源名称，如 @string/hello_wrold</p></blockquote></li><li><p><strong>AndroidManifest.xml</strong> 是整个 Android 项目的配置文件，四大组件都要在此注册，这个文件给应用程序添加<strong>权限声明</strong>。</p></li><li><p>test 里用来编写 Unit Test 测试用例，是自动化测试的另一种方式。</p></li><li><p><strong>build.gradle</strong> 是 app 模块的 <strong>gradle 构建脚本</strong>。</p></li><li><p>proguard-rules.pro 用于指定项目代码的混淆规则。</p></li></ol><h3 id="app-里的-build-gradle"><a href="#app-里的-build-gradle" class="headerlink" title="app 里的 build.gradle"></a>app 里的 build.gradle</h3><h3 id="Android-的日志工具-Log"><a href="#Android-的日志工具-Log" class="headerlink" title="Android 的日志工具 Log"></a>Android 的日志工具 Log</h3><ol><li>Log.v()</li><li>Log.d()</li><li>Log.i() :important，分析用户行为的数据。</li><li>Log.w()</li><li>Log.e()</li></ol><p>1 级别最低，5 级别最高。每次打印日志时，会把此级别以及此级别以上的日志显示出来，使用关键字过滤，支持正则表达式。</p><p>Log.d() 方法会传入 2 个参数，第一个是 tag ，一般传入当前类名，用于打印信息过滤，第二个是 msg ，即要打印的具体内容。</p><p>AS 快捷键：</p><p>在 onCreate() 方法的外面，输入 logt + tab ，生成一个以当前类名作为值的 TAG 常量；</p><p>logd + tab </p><p>logi + tab</p><p>logw + tab</p><p>loge + tab</p><p>logt + tab</p><h2 id="Chapter-2-活动"><a href="#Chapter-2-活动" class="headerlink" title="Chapter 2  活动"></a>Chapter 2  活动</h2><h3 id="活动的注册"><a href="#活动的注册" class="headerlink" title="活动的注册"></a>活动的注册</h3><h3 id="在活动中使用-Toast"><a href="#在活动中使用-Toast" class="headerlink" title="在活动中使用 Toast"></a>在活动中使用 Toast</h3><h3 id="在活动中添加-Menu-P38"><a href="#在活动中添加-Menu-P38" class="headerlink" title="在活动中添加 Menu P38"></a>在活动中添加 Menu P38</h3><h3 id="销毁活动-finish（）"><a href="#销毁活动-finish（）" class="headerlink" title="销毁活动 finish（）"></a>销毁活动 finish（）</h3><h3 id="使用-Intent"><a href="#使用-Intent" class="headerlink" title="使用 Intent"></a>使用 Intent</h3><blockquote><p>Intent 是各组件之间进行交互的重要方式。它有两个作用：</p><ol><li>指明当前组件想要执行的动作。即意图，如：启动活动、服务、发送广播。</li><li>在不同组件之间传递数据。</li></ol></blockquote><p>Intent 有<strong>显式</strong>和<strong>隐式</strong>两种。</p><h3 id="更多隐式-Intent-的用法"><a href="#更多隐式-Intent-的用法" class="headerlink" title="更多隐式 Intent 的用法"></a>更多隐式 Intent 的用法</h3><ol><li>使用 Intent 显示网页</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_VIEW);</div><div class="line">intent.setData(Uri.parse(<span class="string">"http://www.wangzhuningecnu.github.io"</span>));</div><div class="line">startActivity(intent);</div></pre></td></tr></table></figure><ol><li>使用 Intent 指定其他协议，如 geo 地理位置，tel 拨打电话</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_DIAL);</div><div class="line">intent.setData(Uri.parse(<span class="string">"tel:10000"</span>));</div><div class="line">startActivity(intent);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1505538034984-f4cdc7503011?dpr=1&amp;amp;auto=compress,format&amp;amp;fit=crop&amp;amp;w=1350&amp;amp;h=&amp;amp;q=80&amp;amp;cs=tinysrgb&amp;amp;crop=&quot; alt=&quot;Android&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="第一行代码" scheme="http://yoursite.com/categories/Android/%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="第一行代码" scheme="http://yoursite.com/tags/%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81/"/>
    
      <category term="任务清单" scheme="http://yoursite.com/tags/%E4%BB%BB%E5%8A%A1%E6%B8%85%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>Effective Java</title>
    <link href="http://yoursite.com/2017/10/09/Effective-Java/"/>
    <id>http://yoursite.com/2017/10/09/Effective-Java/</id>
    <published>2017-10-09T02:42:58.000Z</published>
    <updated>2017-10-09T06:06:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images.unsplash.com/photo-1437422061949-f6efbde0a471?dpr=1&amp;auto=compress,format&amp;fit=crop&amp;w=1350&amp;h=&amp;q=80&amp;cs=tinysrgb&amp;crop=" alt="Nature"></p><a id="more"></a><h2 id="Chapter-1"><a href="#Chapter-1" class="headerlink" title="Chapter 1"></a>Chapter 1</h2><h3 id="本书基本原则"><a href="#本书基本原则" class="headerlink" title="本书基本原则"></a>本书基本原则</h3><ol><li>清晰性、简洁性：模块的用户永远不应被模块的行为迷惑</li><li>模块要尽可能小，但又不能太小（模块 Module 是指任何可重用的组件，包括单个方法，到多个包的复杂系统）</li><li>代码应该被重用，而不是被拷贝</li><li>模块之间的依赖性应该尽可能降到最小</li><li>错误应该尽早被检测出来，最好是在编译时</li></ol><p>写出清晰、正确、可用、健壮、灵活和可维护的程序来。如果你能做到这一点，那么获得所需的性能就比较简单了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1437422061949-f6efbde0a471?dpr=1&amp;amp;auto=compress,format&amp;amp;fit=crop&amp;amp;w=1350&amp;amp;h=&amp;amp;q=80&amp;amp;cs=tinysrgb&amp;amp;crop=&quot; alt=&quot;Nature&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
      <category term="Effective Java" scheme="http://yoursite.com/categories/Java/Effective-Java/"/>
    
    
      <category term="任务清单" scheme="http://yoursite.com/tags/%E4%BB%BB%E5%8A%A1%E6%B8%85%E5%8D%95/"/>
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java Primary Question</title>
    <link href="http://yoursite.com/2017/10/08/Java-Primary-Question/"/>
    <id>http://yoursite.com/2017/10/08/Java-Primary-Question/</id>
    <published>2017-10-08T03:50:07.000Z</published>
    <updated>2017-11-02T03:22:19.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images.unsplash.com/photo-1502083728181-687546e77613?dpr=1&amp;auto=compress,format&amp;fit=crop&amp;w=1350&amp;h=&amp;q=80&amp;cs=tinysrgb&amp;crop=" alt="nature"></p><a id="more"></a><h2 id="引用数组的赋值问题"><a href="#引用数组的赋值问题" class="headerlink" title="引用数组的赋值问题"></a>引用数组的赋值问题</h2><p>元素对象为 Student 类，数组元素对象为什么不能这样声明：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Student[] arrStudent = <span class="keyword">new</span> Student[]&#123;&#123;<span class="string">"D"</span>,<span class="number">90</span>&#125; , &#123;<span class="string">"C"</span>,<span class="number">100</span>&#125; , &#123;<span class="string">"B"</span>,<span class="number">95</span>&#125; , &#123;<span class="string">"A"</span>,<span class="number">95</span>&#125;&#125;;</div><div class="line"></div><div class="line">Student[] arrStudent = <span class="keyword">new</span> Student[]()&#123;&#123;<span class="string">"D"</span>,<span class="number">90</span>&#125; , &#123;<span class="string">"C"</span>,<span class="number">100</span>&#125; , &#123;<span class="string">"B"</span>,<span class="number">95</span>&#125; , &#123;<span class="string">"A"</span>,<span class="number">95</span>&#125;&#125;;</div></pre></td></tr></table></figure><p>Integer 的包装类就可以这样声明：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//测试 Integer</span></div><div class="line">Integer arrInteger[] = &#123;<span class="number">10</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>&#125;;</div><div class="line">SelectionSort.selectionSort(arrInteger);</div><div class="line"><span class="keyword">for</span> (Integer i : arrInteger )&#123;</div><div class="line">System.out.print(i + <span class="string">" "</span>);</div><div class="line">&#125;</div><div class="line">System.out.println();</div><div class="line"></div><div class="line"><span class="comment">//测试 Double</span></div><div class="line">Double arrDouble[] = &#123;<span class="number">4.3</span>,<span class="number">4.2</span>,<span class="number">3.3</span>,<span class="number">2.1</span>,<span class="number">1.0</span>&#125;;</div><div class="line">SelectionSort.selectionSort(arrDouble);</div><div class="line"><span class="keyword">for</span> (Double double1 : arrDouble) &#123;</div><div class="line">System.out.print(double1 + <span class="string">" "</span>);</div><div class="line">&#125;</div><div class="line">System.out.println();</div><div class="line"></div><div class="line"><span class="comment">//测试 String</span></div><div class="line">String[] arrString = &#123;<span class="string">"D"</span>,<span class="string">"C"</span>,<span class="string">"B"</span>,<span class="string">"A"</span>&#125;;</div><div class="line">SelectionSort.selectionSort(arrString);</div><div class="line"><span class="keyword">for</span> (String string : arrString) &#123;</div><div class="line">System.out.print(string+<span class="string">" "</span>);</div><div class="line">&#125;</div><div class="line">System.out.println();</div></pre></td></tr></table></figure><p>引用类型的数组不可以在声明时赋值吗？</p><p>引用类型数组怎么定义的？</p><h2 id="assert-是保证什么的东东，不是类，也不是静态方法，那应该是Object里的-但是没有"><a href="#assert-是保证什么的东东，不是类，也不是静态方法，那应该是Object里的-但是没有" class="headerlink" title="assert 是保证什么的东东，不是类，也不是静态方法，那应该是Object里的,但是没有"></a>assert 是保证什么的东东，不是类，也不是静态方法，那应该是Object里的,但是没有</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">assert</span> randomLeft &lt;= randomRight;</div></pre></td></tr></table></figure><p>这句能保证的是，randomLeft 的值 如果大于 randomRight 的值，则会把他们两个调换。不会报 true 或 false ，也不会报错，程序还是能运行。</p><h2 id="泛型泛型啊"><a href="#泛型泛型啊" class="headerlink" title="泛型泛型啊"></a>泛型泛型啊</h2><h2 id="Foreach-用法注意"><a href="#Foreach-用法注意" class="headerlink" title="Foreach 用法注意"></a>Foreach 用法注意</h2><p>若是给数组赋值，则不能用 Foreach ，因为 foreach 只是把值拷贝给一个临时变量，并不会赋值给数组本身。</p><p>错误示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (Integer integer : arr) &#123;</div><div class="line">integer = <span class="keyword">new</span> Integer((<span class="keyword">int</span>)(Math.random()*(randomRight-randomLeft+<span class="number">1</span>)+randomLeft));</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>确实生成了随机数给 integer,但并没有给数组。</p><h2 id="Java的反射机制"><a href="#Java的反射机制" class="headerlink" title="Java的反射机制"></a>Java的反射机制</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1502083728181-687546e77613?dpr=1&amp;amp;auto=compress,format&amp;amp;fit=crop&amp;amp;w=1350&amp;amp;h=&amp;amp;q=80&amp;amp;cs=tinysrgb&amp;amp;crop=&quot; alt=&quot;nature&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
      <category term="Java 问题贴" scheme="http://yoursite.com/categories/Java/Java-%E9%97%AE%E9%A2%98%E8%B4%B4/"/>
    
    
      <category term="Java 问题贴" scheme="http://yoursite.com/tags/Java-%E9%97%AE%E9%A2%98%E8%B4%B4/"/>
    
  </entry>
  
  <entry>
    <title>sortAlgorithm</title>
    <link href="http://yoursite.com/2017/10/07/sortAlgorithm/"/>
    <id>http://yoursite.com/2017/10/07/sortAlgorithm/</id>
    <published>2017-10-07T03:56:40.000Z</published>
    <updated>2017-11-07T15:30:07.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images.unsplash.com/photo-1431794062232-2a99a5431c6c?dpr=1&amp;auto=compress,format&amp;fit=crop&amp;w=1350&amp;h=&amp;q=80&amp;cs=tinysrgb&amp;crop=" alt="nature"></p><a id="more"></a><h2 id="最简单的-—-选择排序"><a href="#最简单的-—-选择排序" class="headerlink" title="最简单的 — 选择排序"></a>最简单的 — 选择排序</h2><blockquote><p>选择排序：每次选择剩余元素中的最小的那个，与当前位置互换。</p><p>选择排序不能中断，插入排序根据条件可能中断</p></blockquote><h3 id="选择排序动态图"><a href="#选择排序动态图" class="headerlink" title="选择排序动态图"></a>选择排序动态图</h3><p><img src="https://cl.ly/2U2q3x2f3t0Q/Screen%20Recording%202017-10-08%20at%2009.18%20%E4%B8%8A%E5%8D%88.gif" alt="选择排序示意图"></p><h3 id="选择排序示例代码"><a href="#选择排序示例代码" class="headerlink" title="选择排序示例代码"></a>选择排序示例代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SelectionSort</span> </span>&#123;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="title">SelectionSort</span><span class="params">()</span></span>&#123;&#125;<span class="comment">//此算法类不允许产生实例</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectionSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</div><div class="line"><span class="comment">//找到剩余元素（下标为 [i，arr.length)中的元素）中最小元素的下标</span></div><div class="line"><span class="keyword">int</span> min = i;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; arr.length; j++) &#123;</div><div class="line"><span class="keyword">if</span> (arr[j] &lt; arr[min]) &#123;</div><div class="line">min = j;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">swap(arr, min, i);<span class="comment">//将选择出的最小元素与当前位置元素 arr[i] 交换</span></div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> n : arr) &#123;</div><div class="line">System.out.print(n +<span class="string">" "</span>);</div><div class="line">&#125;</div><div class="line">System.out.println();</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> arr[],<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span> </span>&#123;</div><div class="line"><span class="keyword">int</span> temp = arr[n];</div><div class="line">arr[n] = arr[m];</div><div class="line">arr[m] = temp;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line"><span class="keyword">int</span> arr[] = &#123;<span class="number">10</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>&#125;;</div><div class="line">SelectionSort.selectionSort(arr);</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i : arr) &#123;</div><div class="line">System.out.print(i + <span class="string">" "</span>);</div><div class="line">&#125;</div><div class="line">System.out.println();</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">输出：</div><div class="line"><span class="number">1</span> <span class="number">8</span> <span class="number">9</span> <span class="number">7</span> <span class="number">4</span> <span class="number">6</span> <span class="number">5</span> <span class="number">3</span> <span class="number">2</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">9</span> <span class="number">7</span> <span class="number">4</span> <span class="number">6</span> <span class="number">5</span> <span class="number">3</span> <span class="number">8</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">7</span> <span class="number">4</span> <span class="number">6</span> <span class="number">5</span> <span class="number">9</span> <span class="number">8</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">7</span> <span class="number">6</span> <span class="number">5</span> <span class="number">9</span> <span class="number">8</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">9</span> <span class="number">8</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">9</span> <span class="number">8</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">9</span> <span class="number">8</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span></div></pre></td></tr></table></figure><h3 id="加了泛型的选择排序"><a href="#加了泛型的选择排序" class="headerlink" title="加了泛型的选择排序"></a>加了泛型的选择排序</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.ning;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Comparable</span>&lt;<span class="title">Student</span>&gt;</span>&#123;</div><div class="line"><span class="keyword">private</span> String name;</div><div class="line"><span class="keyword">private</span> <span class="keyword">int</span> grade;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name,<span class="keyword">int</span> grade)</span> </span>&#123;</div><div class="line"><span class="comment">// TODO Auto-generated constructor stub</span></div><div class="line"><span class="keyword">this</span>.name = name;</div><div class="line"><span class="keyword">this</span>.grade = grade;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="comment">// TODO Auto-generated constructor stub</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">    <span class="comment">// 定义Student的compareTo函数</span></div><div class="line">    <span class="comment">// 如果分数相等，则按照名字的字母序排序</span></div><div class="line">    <span class="comment">// 如果分数不等，则分数高的靠前</span></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Student o)</span> </span>&#123;</div><div class="line"><span class="comment">// TODO Auto-generated method stub</span></div><div class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.grade &gt; o.grade) &#123;</div><div class="line"><span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.grade &lt; o.grade) &#123;</div><div class="line"><span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line">&#125;<span class="keyword">else</span> &#123;</div><div class="line"><span class="keyword">return</span> <span class="keyword">this</span>.name.compareTo(o.name);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="comment">// TODO Auto-generated method stub</span></div><div class="line"><span class="keyword">return</span> <span class="string">"Student: "</span> + <span class="keyword">this</span>.name + <span class="string">" "</span> + <span class="keyword">this</span>.grade;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.ning;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.lang.management.MemoryManagerMXBean;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SelectionSort</span> </span>&#123;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="title">SelectionSort</span><span class="params">()</span></span>&#123;&#125;<span class="comment">//算法类不允许产生实例</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectionSort</span><span class="params">(Comparable[] arr)</span> </span>&#123;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</div><div class="line"><span class="comment">//找到 [i，arr.length)中 最小元素的下标</span></div><div class="line"><span class="keyword">int</span> min = i;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; arr.length; j++) &#123;</div><div class="line"><span class="comment">//使用compareTo方法比较两个Comparable对象的大小</span></div><div class="line"><span class="keyword">if</span> (arr[j].compareTo(arr[min]) &lt; <span class="number">0</span>) &#123;</div><div class="line">min = j;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">swap(arr, min, i);<span class="comment">//将选择出的最小元素与 i 交换</span></div><div class="line"><span class="keyword">for</span> (Object n : arr) &#123;</div><div class="line">System.out.print(n +<span class="string">" "</span>);</div><div class="line">&#125;</div><div class="line">System.out.println();</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(Object arr[],<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span> </span>&#123;</div><div class="line">Object temp = arr[n];</div><div class="line">arr[n] = arr[m];</div><div class="line">arr[m] = temp;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line"><span class="comment">//测试 Integer</span></div><div class="line">Integer arrInteger[] = &#123;<span class="number">10</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>&#125;;</div><div class="line">SelectionSort.selectionSort(arrInteger);</div><div class="line"><span class="keyword">for</span> (Integer i : arrInteger )&#123;</div><div class="line">System.out.print(i + <span class="string">" "</span>);</div><div class="line">&#125;</div><div class="line">System.out.println();</div><div class="line"></div><div class="line"><span class="comment">//测试 Double</span></div><div class="line">Double arrDouble[] = &#123;<span class="number">4.3</span>,<span class="number">4.2</span>,<span class="number">3.3</span>,<span class="number">2.1</span>,<span class="number">1.0</span>&#125;;</div><div class="line">SelectionSort.selectionSort(arrDouble);</div><div class="line"><span class="keyword">for</span> (Double double1 : arrDouble) &#123;</div><div class="line">System.out.print(double1 + <span class="string">" "</span>);</div><div class="line">&#125;</div><div class="line">System.out.println();</div><div class="line"></div><div class="line"><span class="comment">//测试 String</span></div><div class="line">String[] arrString = &#123;<span class="string">"D"</span>,<span class="string">"C"</span>,<span class="string">"B"</span>,<span class="string">"A"</span>&#125;;</div><div class="line">SelectionSort.selectionSort(arrString);</div><div class="line"><span class="keyword">for</span> (String string : arrString) &#123;</div><div class="line">System.out.print(string+<span class="string">" "</span>);</div><div class="line">&#125;</div><div class="line">System.out.println();</div><div class="line"></div><div class="line"><span class="comment">//测试自定义的 Student 类</span></div><div class="line">Student[] arrStudent = <span class="keyword">new</span> Student[<span class="number">3</span>];</div><div class="line">arrStudent[<span class="number">0</span>] = <span class="keyword">new</span> Student(<span class="string">"wang"</span>,<span class="number">100</span>);</div><div class="line">arrStudent[<span class="number">1</span>] = <span class="keyword">new</span> Student(<span class="string">"zhang"</span>,<span class="number">98</span>);</div><div class="line">arrStudent[<span class="number">2</span>] = <span class="keyword">new</span> Student(<span class="string">"xiang"</span>,<span class="number">79</span>);</div><div class="line">SelectionSort.selectionSort(arrStudent);</div><div class="line"><span class="keyword">for</span> (Student student : arrStudent) &#123;</div><div class="line">System.out.print(student + <span class="string">" "</span>);</div><div class="line">&#125;</div><div class="line">System.out.println();</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">输出结果：</div><div class="line"><span class="number">1</span> <span class="number">8</span> <span class="number">9</span> <span class="number">7</span> <span class="number">4</span> <span class="number">6</span> <span class="number">5</span> <span class="number">3</span> <span class="number">2</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">9</span> <span class="number">7</span> <span class="number">4</span> <span class="number">6</span> <span class="number">5</span> <span class="number">3</span> <span class="number">8</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">7</span> <span class="number">4</span> <span class="number">6</span> <span class="number">5</span> <span class="number">9</span> <span class="number">8</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">7</span> <span class="number">6</span> <span class="number">5</span> <span class="number">9</span> <span class="number">8</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">9</span> <span class="number">8</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">9</span> <span class="number">8</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">9</span> <span class="number">8</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> </div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> </div><div class="line"><span class="number">1.0</span> <span class="number">4.2</span> <span class="number">3.3</span> <span class="number">2.1</span> <span class="number">4.3</span> </div><div class="line"><span class="number">1.0</span> <span class="number">2.1</span> <span class="number">3.3</span> <span class="number">4.2</span> <span class="number">4.3</span> </div><div class="line"><span class="number">1.0</span> <span class="number">2.1</span> <span class="number">3.3</span> <span class="number">4.2</span> <span class="number">4.3</span> </div><div class="line"><span class="number">1.0</span> <span class="number">2.1</span> <span class="number">3.3</span> <span class="number">4.2</span> <span class="number">4.3</span> </div><div class="line"><span class="number">1.0</span> <span class="number">2.1</span> <span class="number">3.3</span> <span class="number">4.2</span> <span class="number">4.3</span> </div><div class="line"><span class="number">1.0</span> <span class="number">2.1</span> <span class="number">3.3</span> <span class="number">4.2</span> <span class="number">4.3</span> </div><div class="line">A C B D </div><div class="line">A B C D </div><div class="line">A B C D </div><div class="line">A B C D </div><div class="line">A B C D </div><div class="line">Student: xiang <span class="number">79</span> Student: zhang <span class="number">98</span> Student: wang <span class="number">100</span> </div><div class="line">Student: xiang <span class="number">79</span> Student: zhang <span class="number">98</span> Student: wang <span class="number">100</span> </div><div class="line">Student: xiang <span class="number">79</span> Student: zhang <span class="number">98</span> Student: wang <span class="number">100</span> </div><div class="line">Student: xiang <span class="number">79</span> Student: zhang <span class="number">98</span> Student: wang <span class="number">100</span></div></pre></td></tr></table></figure><h3 id="随机生成算法测试用例的-SortTestHelper-类"><a href="#随机生成算法测试用例的-SortTestHelper-类" class="headerlink" title="随机生成算法测试用例的 SortTestHelper 类"></a>随机生成算法测试用例的 SortTestHelper 类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.ning;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SortTestHelper</span> </span>&#123;</div><div class="line"></div><div class="line"><span class="comment">//SortTestHelper 不允许产生任何实例</span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="title">SortTestHelper</span><span class="params">()</span> </span>&#123;&#125;</div><div class="line"></div><div class="line"><span class="comment">//生成 n 个元素的随机数组，每个随机数的范围是【randomLeft，randomRight】</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> Integer[] generateRandomArray(<span class="keyword">int</span> n,<span class="keyword">int</span> randomLeft,<span class="keyword">int</span> randomRight) &#123;</div><div class="line">        <span class="keyword">assert</span> randomLeft &lt;= randomRight;</div><div class="line">Integer[] arr = <span class="keyword">new</span> Integer[n];</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; arr.length ; i++) &#123;</div><div class="line">arr[i] = <span class="keyword">new</span> Integer((<span class="keyword">int</span>)(Math.random()*(randomRight-randomLeft+<span class="number">1</span>)+randomLeft));</div><div class="line"><span class="comment">//System.out.println(arr[i]);</span></div><div class="line">&#125;</div><div class="line">SortTestHelper.printArray(arr);</div><div class="line"><span class="keyword">return</span> arr;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArray</span><span class="params">(Object[] arr)</span> </span>&#123;</div><div class="line"><span class="keyword">for</span> (Object o : arr) &#123;</div><div class="line">System.out.print(o + <span class="string">" "</span>);</div><div class="line">&#125;</div><div class="line">System.out.println();</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>注意：数组赋值的时候，不能使用 foreach 写法，否则只是赋值给了局部变量，并没有赋值给数组本身。</p><p>SortTestHelper 类的使用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//测试 Integer</span></div><div class="line"><span class="keyword">int</span> n = <span class="number">10000</span>;</div><div class="line">Integer arrInteger[] = SortTestHelper.generateRandomArray(n, <span class="number">0</span>, n);</div><div class="line">SelectionSort.selectionSort(arrInteger);</div><div class="line">SortTestHelper.printArray(arrInteger);</div></pre></td></tr></table></figure><h3 id="在-SortTestHelper-类中加入测试算法的性能的代码"><a href="#在-SortTestHelper-类中加入测试算法的性能的代码" class="headerlink" title="在 SortTestHelper 类中加入测试算法的性能的代码"></a>在 SortTestHelper 类中加入测试算法的性能的代码</h3><p>SortTestHelper 类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> bobo.algo;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.lang.reflect.Method;</div><div class="line"><span class="keyword">import</span> java.lang.Class;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SortTestHelper</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">//······</span></div><div class="line"></div><div class="line">    <span class="comment">// 判断arr数组是否有序</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isSorted</span><span class="params">(Comparable[] arr)</span></span>&#123;</div><div class="line"></div><div class="line">        <span class="keyword">for</span>( <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; arr.length - <span class="number">1</span> ; i ++ )  <span class="comment">//这里一定是arr.length - 1，否则越界</span></div><div class="line">            <span class="keyword">if</span>( arr[i].compareTo(arr[i+<span class="number">1</span>]) &gt; <span class="number">0</span> )</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 测试sortClassName所对应的排序算法排序arr数组所得到结果的正确性和算法运行时间</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testSort</span><span class="params">(String sortClassName, Comparable[] arr)</span></span>&#123;</div><div class="line"></div><div class="line">        <span class="comment">// 通过Java的反射机制，通过排序的类名，运行排序函数</span></div><div class="line">        <span class="comment">// * 依然是，使用反射机制并不是这个课程的重点, 大家也完全可以使用自己的方式书写代码, 最终只要能够测试出自己书写的算法的效率即可</span></div><div class="line">        <span class="comment">// * 推荐大家阅读我在问答区向大家分享的一个学习心得: 【学习心得分享】请大家抓大放小，不要纠结于C++语言的语法细节</span></div><div class="line">        <span class="comment">// * 链接: http://coding.imooc.com/learn/questiondetail/4100.html</span></div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            <span class="comment">// 通过sortClassName获得排序函数的Class对象</span></div><div class="line">            Class sortClass = Class.forName(sortClassName);</div><div class="line">            <span class="comment">// 通过排序函数的Class对象获得排序方法</span></div><div class="line">            Method sortMethod = sortClass.getMethod(<span class="string">"sort"</span>,<span class="keyword">new</span> Class[]&#123;Comparable[].class&#125;);</div><div class="line">            <span class="comment">// 排序参数只有一个，是可比较数组arr</span></div><div class="line">            Object[] params = <span class="keyword">new</span> Object[]&#123;arr&#125;;</div><div class="line"></div><div class="line">            <span class="keyword">long</span> startTime = System.currentTimeMillis();</div><div class="line">            <span class="comment">// 调用排序函数</span></div><div class="line">            sortMethod.invoke(<span class="keyword">null</span>,params);</div><div class="line">            <span class="keyword">long</span> endTime = System.currentTimeMillis();</div><div class="line"></div><div class="line">            <span class="function"><span class="keyword">assert</span> <span class="title">isSorted</span><span class="params">( arr )</span></span>;</div><div class="line"></div><div class="line">            System.out.println( sortClass.getSimpleName()+ <span class="string">" : "</span> + (endTime-startTime) + <span class="string">"ms"</span> );</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">catch</span>(Exception e)&#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>客户端：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> bobo.algo;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.*;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SelectionSort</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">// 我们的算法类不允许产生任何实例</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SelectionSort</span><span class="params">()</span></span>&#123;&#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(Comparable[] arr)</span></span>&#123;</div><div class="line"></div><div class="line">        <span class="keyword">int</span> n = arr.length;</div><div class="line">        <span class="keyword">for</span>( <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i ++ )&#123;</div><div class="line">            <span class="comment">// 寻找[i, n)区间里的最小值的索引</span></div><div class="line">            <span class="keyword">int</span> minIndex = i;</div><div class="line">            <span class="keyword">for</span>( <span class="keyword">int</span> j = i + <span class="number">1</span> ; j &lt; n ; j ++ )</div><div class="line">                <span class="comment">// 使用compareTo方法比较两个Comparable对象的大小</span></div><div class="line">                <span class="keyword">if</span>( arr[j].compareTo( arr[minIndex] ) &lt; <span class="number">0</span> )</div><div class="line">                    minIndex = j;</div><div class="line"></div><div class="line">            swap( arr , i , minIndex);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(Object[] arr, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</div><div class="line">        Object t = arr[i];</div><div class="line">        arr[i] = arr[j];</div><div class="line">        arr[j] = t;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="comment">// 测试排序算法辅助函数</span></div><div class="line">        <span class="keyword">int</span> N = <span class="number">10000</span>;</div><div class="line">        Integer[] arr = SortTestHelper.generateRandomArray(N, <span class="number">0</span>, N);</div><div class="line">        SortTestHelper.testSort(<span class="string">"bobo.algo.SelectionSort"</span>, arr);</div><div class="line"></div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">输出结果：</div><div class="line">N = <span class="number">100</span> 时，排序数...SelectionSort: <span class="number">1</span>ms</div><div class="line">N = <span class="number">1000</span> 时，排序数...SelectionSort: <span class="number">12</span>ms</div><div class="line">N = <span class="number">10000</span> 时，排序数..SelectionSort: <span class="number">140</span>ms</div><div class="line">N = <span class="number">100000</span> 时，排序数.SelectionSort: <span class="number">11577</span>ms</div></pre></td></tr></table></figure><h2 id="同样-n²-的-—-插入排序"><a href="#同样-n²-的-—-插入排序" class="headerlink" title="同样 n² 的 — 插入排序"></a>同样 n² 的 — 插入排序</h2><blockquote><p>插入排序：把后面的元素，一个位置一个位置的往前，插入到合适的位置</p><p>插入排序像是一边摸牌，一边码牌；选择排序像是发牌完毕后，再码牌</p></blockquote><h3 id="插入排序动态图"><a href="#插入排序动态图" class="headerlink" title="插入排序动态图"></a>插入排序动态图</h3><p><img src="https://dr5mo5s7lqrtc.cloudfront.net/items/000U1Q3O0x2w2O1v0A0C/Screen%20Recording%202017-10-12%20at%2009.59%20%E4%B8%8B%E5%8D%88.gif?X-CloudApp-Visitor-Id=2843916&amp;v=17057a3b" alt="插入排序示意图"></p><h3 id="插入排序示例代码"><a href="#插入排序示例代码" class="headerlink" title="插入排序示例代码"></a>插入排序示例代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.ning;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InsertionSort</span> </span>&#123;</div><div class="line"> <span class="comment">// 我们的算法类不允许产生任何实例</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">InsertionSort</span><span class="params">()</span></span>&#123;&#125;</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(Comparable arr[])</span> </span>&#123;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; arr.length; i++) &#123;</div><div class="line"><span class="comment">// 寻找元素arr[i]合适的插入位置</span></div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &gt;= <span class="number">1</span> ; j--) &#123;</div><div class="line"><span class="keyword">if</span> (arr[j].compareTo(arr[j-<span class="number">1</span>])&lt;<span class="number">0</span>) &#123;</div><div class="line">swap(arr,j,j-<span class="number">1</span>);</div><div class="line">&#125;<span class="keyword">else</span> &#123;</div><div class="line"><span class="keyword">break</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(Object[] a,<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span> </span>&#123;</div><div class="line">Object temp = a[m];</div><div class="line">a[m] = a[n];</div><div class="line">a[n] = temp;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="插入排序与选择排序的比较"><a href="#插入排序与选择排序的比较" class="headerlink" title="插入排序与选择排序的比较"></a>插入排序与选择排序的比较</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">         <span class="keyword">int</span> n = <span class="number">100000</span>;</div><div class="line">Integer[] arr1 = SortTestHelper.generateRandomArray(n, <span class="number">0</span>, n);</div><div class="line">Integer[] arr2 = Arrays.copyOf(arr1, arr1.length);</div><div class="line"><span class="comment">//Java 中有赋值数组的方法，C++ 中没有</span></div><div class="line"><span class="comment">/*SelectionSort.selectionSort(arrInteger);</span></div><div class="line"><span class="comment">SortTestHelper.printArray(arrInteger);*/</span></div><div class="line">SortTestHelper.testSort(<span class="string">"com.ning.SelectionSort"</span>, arr1);</div><div class="line">SortTestHelper.testSort(<span class="string">"com.ning.InsertionSort"</span>, arr2);</div><div class="line"></div><div class="line">结果：</div><div class="line">SelectionSort: <span class="number">14086</span>ms</div><div class="line">InsertionSort: <span class="number">15634</span>ms</div></pre></td></tr></table></figure><blockquote><p> 比较 SelectionSort 和 InsertionSort 两种排序算法的性能效率</p><p> 此时，插入排序比选择排序性能略低</p></blockquote><h2 id="插入排序的优化"><a href="#插入排序的优化" class="headerlink" title="插入排序的优化"></a>插入排序的优化</h2><blockquote><p>插入排序在元素本就在该位置时，会结束本次比较，按理说比不能中断的选择排序要快，但并非如此，为何？</p><p>因为插入排序在遍历的同时，也在不停交换，交换操作比比较更耗时，每次交换都有三次赋值的操作。</p></blockquote><h3 id="插入排序优化示意图"><a href="#插入排序优化示意图" class="headerlink" title="插入排序优化示意图"></a>插入排序优化示意图</h3><p><img src="https://dr5mo5s7lqrtc.cloudfront.net/items/253N3x2i042N0v3w0o2I/Screen%20Recording%202017-10-12%20at%2010.16%20%E4%B8%8B%E5%8D%88.gif?X-CloudApp-Visitor-Id=2843916&amp;v=6c7b0085" alt="插入排序优化示意图"></p><h3 id="插入排序优化示例代码"><a href="#插入排序优化示例代码" class="headerlink" title="插入排序优化示例代码"></a>插入排序优化示例代码</h3><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.ning;</div><div class="line"><span class="comment">//这是冒泡排序</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BubbleSort</span> </span>&#123;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="title">BubbleSort</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(Comparable[] array)</span> </span>&#123;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>+i; j &lt; array.length; j++) &#123;</div><div class="line"><span class="keyword">if</span> (array[j].compareTo(array[i]) &lt; <span class="number">0</span>) &#123;</div><div class="line">Comparable temp = array[j];</div><div class="line">array[j] = array[i];</div><div class="line">array[i] = temp;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">输出结果：</div><div class="line"><span class="number">11</span> <span class="number">14</span> <span class="number">9</span> <span class="number">16</span> <span class="number">7</span> <span class="number">19</span> <span class="number">1</span> <span class="number">9</span> <span class="number">15</span> <span class="number">5</span>  </div><div class="line">  </div><div class="line"><span class="number">1</span> <span class="number">14</span> <span class="number">11</span> <span class="number">16</span> <span class="number">9</span> <span class="number">19</span> <span class="number">7</span> <span class="number">9</span> <span class="number">15</span> <span class="number">5</span>  </div><div class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">14</span> <span class="number">16</span> <span class="number">11</span> <span class="number">19</span> <span class="number">9</span> <span class="number">9</span> <span class="number">15</span> <span class="number">7</span>  </div><div class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">7</span> <span class="number">16</span> <span class="number">14</span> <span class="number">19</span> <span class="number">11</span> <span class="number">9</span> <span class="number">15</span> <span class="number">9</span>  </div><div class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span> <span class="number">16</span> <span class="number">19</span> <span class="number">14</span> <span class="number">11</span> <span class="number">15</span> <span class="number">9</span>  </div><div class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span> <span class="number">9</span> <span class="number">19</span> <span class="number">16</span> <span class="number">14</span> <span class="number">15</span> <span class="number">11</span>  </div><div class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span> <span class="number">9</span> <span class="number">11</span> <span class="number">19</span> <span class="number">16</span> <span class="number">15</span> <span class="number">14</span>  </div><div class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span> <span class="number">9</span> <span class="number">11</span> <span class="number">14</span> <span class="number">19</span> <span class="number">16</span> <span class="number">15</span>  </div><div class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span> <span class="number">9</span> <span class="number">11</span> <span class="number">14</span> <span class="number">15</span> <span class="number">19</span> <span class="number">16</span>  </div><div class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span> <span class="number">9</span> <span class="number">11</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">19</span>  </div><div class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span> <span class="number">9</span> <span class="number">11</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">19</span>  </div><div class="line">  </div><div class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span> <span class="number">9</span> <span class="number">11</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">19</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1431794062232-2a99a5431c6c?dpr=1&amp;amp;auto=compress,format&amp;amp;fit=crop&amp;amp;w=1350&amp;amp;h=&amp;amp;q=80&amp;amp;cs=tinysrgb&amp;amp;crop=&quot; alt=&quot;nature&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="排序算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Java 算法与数据结构（慕课网）" scheme="http://yoursite.com/tags/Java-%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%88%E6%85%95%E8%AF%BE%E7%BD%91%EF%BC%89/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>TaskList：SAIC MAXUS</title>
    <link href="http://yoursite.com/2017/10/04/TaskList%EF%BC%9ASAIC-MAXUS/"/>
    <id>http://yoursite.com/2017/10/04/TaskList：SAIC-MAXUS/</id>
    <published>2017-10-04T00:50:50.000Z</published>
    <updated>2017-10-09T06:07:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images.unsplash.com/photo-1427606694672-8f86d75947ce?dpr=1&amp;auto=compress,format&amp;fit=crop&amp;w=1355&amp;h=&amp;q=80&amp;cs=tinysrgb&amp;crop=" alt="nature"></p><a id="more"></a><h2 id="数据库实现"><a href="#数据库实现" class="headerlink" title="数据库实现"></a>数据库实现</h2><h2 id="手机验证码"><a href="#手机验证码" class="headerlink" title="手机验证码"></a>手机验证码</h2><h2 id="滚动广告"><a href="#滚动广告" class="headerlink" title="滚动广告"></a>滚动广告</h2><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><h2 id="智能推荐"><a href="#智能推荐" class="headerlink" title="智能推荐"></a>智能推荐</h2><h2 id="购买支付"><a href="#购买支付" class="headerlink" title="购买支付"></a>购买支付</h2><h2 id="语音"><a href="#语音" class="headerlink" title="语音"></a>语音</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1427606694672-8f86d75947ce?dpr=1&amp;amp;auto=compress,format&amp;amp;fit=crop&amp;amp;w=1355&amp;amp;h=&amp;amp;q=80&amp;amp;cs=tinysrgb&amp;amp;crop=&quot; alt=&quot;nature&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="上汽大通" scheme="http://yoursite.com/categories/%E4%B8%8A%E6%B1%BD%E5%A4%A7%E9%80%9A/"/>
    
    
      <category term="任务清单" scheme="http://yoursite.com/tags/%E4%BB%BB%E5%8A%A1%E6%B8%85%E5%8D%95/"/>
    
      <category term="上汽大通" scheme="http://yoursite.com/tags/%E4%B8%8A%E6%B1%BD%E5%A4%A7%E9%80%9A/"/>
    
  </entry>
  
  <entry>
    <title>Writing specifications</title>
    <link href="http://yoursite.com/2017/10/02/Writing-specifications/"/>
    <id>http://yoursite.com/2017/10/02/Writing-specifications/</id>
    <published>2017-10-02T08:52:45.000Z</published>
    <updated>2017-11-02T03:23:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images.unsplash.com/uploads/14117450256890cec7683/4575979c?dpr=1&amp;auto=compress,format&amp;fit=crop&amp;w=1350&amp;h=&amp;q=80&amp;cs=tinysrgb&amp;crop=" alt="nature"></p><a id="more"></a><p>摘自：</p><blockquote><p>stormzhang 的博客：<a href="http://stormzhang.com/2017/03/16/chinese-copywriting/" target="_blank" rel="external">每个人都需要的中文排版指南</a></p></blockquote><h2 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h2><ul><li><p>中英文之间需要加空格</p><p>eg. 大家可以搜索公众号 AndroidDeveloper 或者 googdev 关注我。</p></li></ul><ul><li><p>中文与数字之间需要加空格</p><p>eg. 不知不觉，我都快 30 岁了。</p></li></ul><ul><li><p>数字与单位之间需要加空格</p><p>eg. 我有一块 20 TB 的硬盘，鬼知道我是怎么用完的。</p></li></ul><ul><li><p>完整的英文整句时标点与单词之间需要加空格</p><p>eg. Stay hungry, stay foolish.</p><p>但是也有一些例外。</p></li><li><p>度的标志、百分号不加空格</p><p>eg. 今天气温有 30° 的高温。 eg. 据统计，关注公众号 AndroidDeveloper 的读者中有 80% 是长得好看的。</p></li><li><p>全角标点与其他字符之间不加空格</p><p>eg. 大家好，我是 stormzhang，请多多关照。</p></li></ul><h2 id="标点"><a href="#标点" class="headerlink" title="标点"></a>标点</h2><p>全角和半角是英文和中文的编码规范不同遗留下的问题，简单来说，全角占两个字节，半角占一个字节，你可以理解成中文汉字是全角，英文字母是半角，不过半角全角主要是针对标点符号来说的，中文标点占两个字节，英文标点占一个字节。体现在排版上的差异就是，全角字符屏幕打印宽度是两个，而半角字符屏幕打印宽度是一个，如中文逗号和英文逗号他们的显示分别是「，」和「,」。</p><ul><li><p>使用全角中文标点</p><p>中文排版中所有的标点都应该使用中文全角中文标点</p><p>eg. 大家好，我是 stormzhang。</p></li></ul><ul><li><p>遇到英文整句、特殊名词时使用半角标点。</p><p>eg. 乔布斯说过：「Stay hungry, stay foolish.」 eg. Facebook, Inc.</p></li></ul><ul><li><p>使用直角引号</p><p>我国国家标准要求弯引号，但是个人建议在新媒体排版时使用直角引号。</p><p>eg. 你竟然不知道「帅比张」？</p><p>如果引号再使用引号使用直角双引号。</p><p>eg. 我质问他，「你难道忘记『帅比张』了么？」</p></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>除以上之外，还有一些其他标准推荐大家使用的。</p><ul><li><p>英文名词首字母尽量大写</p><p>eg. Google、Android、Facebook</p></li></ul><ul><li><p>专有名词使用正确的大小写</p><p>eg. GitHub、iOS、iPhone 6s、MacBook Pro</p></li></ul><ul><li><p>首行不要缩进</p><p>大家一般都采用「空出一行」进行自然段与自然段之间的区分，这种写作方式非常省事，而且很整齐。</p><p>​</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://images.unsplash.com/uploads/14117450256890cec7683/4575979c?dpr=1&amp;amp;auto=compress,format&amp;amp;fit=crop&amp;amp;w=1350&amp;amp;h=&amp;amp;q=80&amp;amp;cs=tinysrgb&amp;amp;crop=&quot; alt=&quot;nature&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="stormzhang" scheme="http://yoursite.com/categories/stormzhang/"/>
    
      <category term="Blog 书写规范" scheme="http://yoursite.com/categories/stormzhang/Blog-%E4%B9%A6%E5%86%99%E8%A7%84%E8%8C%83/"/>
    
    
      <category term="stormzhang" scheme="http://yoursite.com/tags/stormzhang/"/>
    
      <category term="中文排版指南" scheme="http://yoursite.com/tags/%E4%B8%AD%E6%96%87%E6%8E%92%E7%89%88%E6%8C%87%E5%8D%97/"/>
    
      <category term="书写规范" scheme="http://yoursite.com/tags/%E4%B9%A6%E5%86%99%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>BookList</title>
    <link href="http://yoursite.com/2017/09/30/BookList/"/>
    <id>http://yoursite.com/2017/09/30/BookList/</id>
    <published>2017-09-30T04:02:48.000Z</published>
    <updated>2017-11-02T03:21:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images.unsplash.com/photo-1500534623283-312aade485b7?dpr=1&amp;auto=compress,format&amp;fit=crop&amp;w=1350&amp;h=&amp;q=80&amp;cs=tinysrgb&amp;crop=" alt="nature"></p><a id="more"></a><h2 id="过去完成时"><a href="#过去完成时" class="headerlink" title="过去完成时"></a>过去完成时</h2><ul><li>Head First Java： 8 - 9 月</li></ul><h2 id="现在进行时"><a href="#现在进行时" class="headerlink" title="现在进行时"></a>现在进行时</h2><ul><li>Android 第一行代码：10 月</li><li>Java 算法与数据结构（慕课网）：10 - 11 月 15 日，每天一小部分，你努力时，全世界都会给你让路。</li><li>Head First Java 总结：10月 。每晚补一点。</li><li>Head First 设计模式：10 - 11 月 15 日，和慕课网的视频结合着一起看。</li><li>CET - 6（10 月 - 11月 15日）：考研单词一天背一单元；一周看一次语法视频。</li></ul><h2 id="将来时"><a href="#将来时" class="headerlink" title="将来时"></a>将来时</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1500534623283-312aade485b7?dpr=1&amp;amp;auto=compress,format&amp;amp;fit=crop&amp;amp;w=1350&amp;amp;h=&amp;amp;q=80&amp;amp;cs=tinysrgb&amp;amp;crop=&quot; alt=&quot;nature&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="书单" scheme="http://yoursite.com/categories/%E4%B9%A6%E5%8D%95/"/>
    
    
      <category term="任务清单" scheme="http://yoursite.com/tags/%E4%BB%BB%E5%8A%A1%E6%B8%85%E5%8D%95/"/>
    
      <category term="书单" scheme="http://yoursite.com/tags/%E4%B9%A6%E5%8D%95/"/>
    
      <category term="Head First Java" scheme="http://yoursite.com/tags/Head-First-Java/"/>
    
      <category term="Effective Java" scheme="http://yoursite.com/tags/Effective-Java/"/>
    
      <category term="Thinking in Java" scheme="http://yoursite.com/tags/Thinking-in-Java/"/>
    
      <category term="Android 第一行代码" scheme="http://yoursite.com/tags/Android-%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81/"/>
    
      <category term="Head First 设计模式" scheme="http://yoursite.com/tags/Head-First-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="CET - 6" scheme="http://yoursite.com/tags/CET-6/"/>
    
      <category term="Java 算法与数据结构（慕课网）" scheme="http://yoursite.com/tags/Java-%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%88%E6%85%95%E8%AF%BE%E7%BD%91%EF%BC%89/"/>
    
      <category term="玩转算法面试 LeetCode 题库分门别类详细解析（慕课网）" scheme="http://yoursite.com/tags/%E7%8E%A9%E8%BD%AC%E7%AE%97%E6%B3%95%E9%9D%A2%E8%AF%95-LeetCode-%E9%A2%98%E5%BA%93%E5%88%86%E9%97%A8%E5%88%AB%E7%B1%BB%E8%AF%A6%E7%BB%86%E8%A7%A3%E6%9E%90%EF%BC%88%E6%85%95%E8%AF%BE%E7%BD%91%EF%BC%89/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>GitHub + Hexo + NexT 主题 免费搭建博客-参考链接收集</title>
    <link href="http://yoursite.com/2017/09/30/FreeBlog%EF%BC%9AGitHub-Hexo/"/>
    <id>http://yoursite.com/2017/09/30/FreeBlog：GitHub-Hexo/</id>
    <published>2017-09-30T02:38:37.000Z</published>
    <updated>2017-10-09T06:06:51.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images.unsplash.com/photo-1502261159926-e31d770eb6e1?dpr=1&amp;auto=compress,format&amp;fit=crop&amp;w=1481&amp;h=&amp;q=80&amp;cs=tinysrgb&amp;crop=" alt="nature"></p><a id="more"></a><h2 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h2><ul><li><a href="https://github.com/" target="_blank" rel="external">GitHub 官网</a>：<a href="https://github.com/" target="_blank" rel="external">https://github.com/</a></li><li><a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo 官网</a>：<a href="https://hexo.io/zh-cn/" target="_blank" rel="external">https://hexo.io/zh-cn/</a> 部署博客</li><li><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">NexT 主题官网</a>：<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">http://theme-next.iissnan.com/</a> 美化博客</li><li><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">NexT 源码地址</a>：用于失误修改next文件夹里的文件，可以参考源码还原</li><li><a href="https://smartbeng.github.io/2017/03/26/blogFinish/" target="_blank" rel="external">最适合新手的 GitHub + Hexo 「大话」博客搭建教程</a></li></ul><ul><li><a href="http://windliang.cc/2017/01/23/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9Ahexo%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/" target="_blank" rel="external">建立博客系列（三）：Hexo 安装配置</a></li><li><a href="http://windliang.cc/2017/01/28/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9ANext%E4%B8%BB%E9%A2%98%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/" target="_blank" rel="external">建立博客系列（四）：NexT 主题相关配置</a></li><li><a href="http://windliang.cc/2017/01/28/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9A%E5%8F%91%E5%B8%83%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/" target="_blank" rel="external">建立博客系列（五）：发布第一篇文章</a></li><li><a href="http://www.jianshu.com/p/017e01718d41" target="_blank" rel="external">记录第一次搭建 Hexo</a></li></ul><h3 id="一些错误的解决方案"><a href="#一些错误的解决方案" class="headerlink" title="一些错误的解决方案"></a>一些错误的解决方案</h3><ul><li><a href="http://www.cnblogs.com/vinozly/p/5817255.html" target="_blank" rel="external">解决 Hexo 神烦的 DTraceProviderBindings MODULE_NOT_FOUND</a></li><li><a href="https://yq.aliyun.com/wenji/212530?spm=5176.8246799.blogcont.19.6hlVue" target="_blank" rel="external">Mac 快速显示或隐藏“隐藏”文件</a></li><li><a href="http://www.cnblogs.com/pingfan1990/p/5065360.html" target="_blank" rel="external">Mac 设置文件权限问题</a></li></ul><h2 id="博客主题-NexT-参考"><a href="#博客主题-NexT-参考" class="headerlink" title="博客主题 NexT 参考"></a>博客主题 NexT 参考</h2><ul><li><a href="http://wuchong.me/" target="_blank" rel="external"> Jark’s Blog</a></li><li><a href="http://windliang.cc/" target="_blank" rel="external">随风丶亮</a></li></ul><h2 id="主题-NexT-美化"><a href="#主题-NexT-美化" class="headerlink" title="主题 NexT 美化"></a>主题 NexT 美化</h2><ul><li><a href="http://fontawesome.io/icons/" target="_blank" rel="external">NexT 主题里用到的所有图标</a></li><li><a href="http://www.easyicon.net/" target="_blank" rel="external">网站 icon 下载地址</a></li><li><a href="http://www.stormxing.com/2017/09/22/3/" target="_blank" rel="external">NexT 主题配置及优化-动态背景等大全</a></li><li><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="external">Hexo 的 NexT 主题个性化教程:打造炫酷网站</a></li><li><a href="http://www.arao.me/2015/hexo-next-theme-optimize-base/" target="_blank" rel="external">NexT 主题添加腾讯空间404公益页面</a></li></ul><h2 id="Hexo-文章管理和写文章"><a href="#Hexo-文章管理和写文章" class="headerlink" title="Hexo 文章管理和写文章"></a>Hexo 文章管理和写文章</h2><ul><li><a href="http://ijiaober.github.io/2014/08/05/hexo/hexo-04/" target="_blank" rel="external">Hexo 使用攻略：（四）Hexo 的分类和标签设置</a></li><li><a href="https://www.zhihu.com/question/19566478?sort=created" target="_blank" rel="external">分类和标签有什么区别和关联?</a></li><li><a href="https://hexo.io/zh-cn/docs/front-matter.html" target="_blank" rel="external">Front - matter | Hexo 官网关于文章分类的解释</a></li><li><a href="http://www.appinn.com/markdown/" target="_blank" rel="external">Markdown 官网</a></li><li><a href="https://sspai.com/post/25137" target="_blank" rel="external">认识与入门 Markdown</a></li><li><a href="http://blog.leanote.com/post/freewalk/Markdown-%E8%AF%AD%E6%B3%95%E6%89%8B%E5%86%8C" target="_blank" rel="external">Markdown 语法手册 （完整整理版）</a></li><li><a href="http://25.io/mou/" target="_blank" rel="external">Mac 下好用的 Markdown 编辑器– Mou</a></li><li><a href="https://typora.io/" target="_blank" rel="external">Mac 下好用的 Markdown 编辑器—Typora</a></li><li><a href="https://www.getcloudapp.com/" target="_blank" rel="external">Mac 下好用的图床工具 CloudApp（科学上网 + 软件收费 + 14天试用）</a></li><li><a href="http://blog.csdn.net/monkey_lzl/article/details/57480599" target="_blank" rel="external">如何利用 GitHub 在 Markdown 中优雅地插入图片</a></li><li><a href="http://www.jianshu.com/p/78c218f9d1e7" target="_blank" rel="external">Hexo-设置阅读全文</a></li></ul><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ol><li>修改文件之前先行备份，以防更改失败；</li><li>找不到的信息，结合官网查询。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1502261159926-e31d770eb6e1?dpr=1&amp;amp;auto=compress,format&amp;amp;fit=crop&amp;amp;w=1481&amp;amp;h=&amp;amp;q=80&amp;amp;cs=tinysrgb&amp;amp;crop=&quot; alt=&quot;nature&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="NexT" scheme="http://yoursite.com/tags/NexT/"/>
    
      <category term="搭建博客" scheme="http://yoursite.com/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/09/29/hello-world/"/>
    <id>http://yoursite.com/2017/09/29/hello-world/</id>
    <published>2017-09-29T02:14:07.000Z</published>
    <updated>2017-10-03T22:40:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
